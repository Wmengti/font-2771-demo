{"version":3,"file":"index.js","sources":["../src/config/contract.ts","../src/core/blockchain.ts","../src/core/operations/token.ts","../src/core/operations/direct-payment.ts","../src/core/signing.ts","../src/core/operations/relayed-payment.ts","../src/core/operations/vault.ts","../src/core/index.ts","../src/core/delegate.ts"],"sourcesContent":["import { \n  keccak256,\n} from 'viem';\n\nexport const UnifiedVaultContractAddress = '0x97169867AC7DD5ca2fb506d335EA940D89695E4F' as `0x${string}`;\nexport const UNIFIED_VAULT_ABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRuleProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discountedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"merchantRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"Consumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"promoTiersEnabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"discountEnabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discountBase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"cashbackPointEnabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackPointBase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackPointAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"cashbackVoucherEnabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackVoucherBase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackVoucherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherExpirePeriod\",\"type\":\"uint256\"}],\"name\":\"MerchantConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"MerchantOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"MerchantRecipientsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"TokenWhitelistChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"name\":\"VoucherGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointToUse\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRuleProvider\",\"outputs\":[{\"internalType\":\"contract IFeeRuleProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"}],\"name\":\"getMyPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyVouchers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"}],\"name\":\"getUserPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"}],\"name\":\"getVoucher\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"used\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"grantPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"name\":\"grantVoucher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merchantConfigs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"promoTiersEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discountEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"discountBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackPointEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackVoucherEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherExpirePeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merchantOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merchantRecipients\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextVoucherId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"promoTiersEnabled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct UnifiedMerchantVault.PromoTier[]\",\"name\":\"promoTiers\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"discountEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"discountBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackPointEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackVoucherEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherExpirePeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct UnifiedMerchantVault.MerchantConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setMerchantConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setMerchantOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"setMerchantRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setTokenWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedSeq\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"userPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userVouchers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vouchers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"used\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];\nexport const paymentContractAddress = '0xB805f94b483bAB6658CA7164FBe02dcB5cA1D332' as `0x${string}`;\n\n// PaymentContract ABI (只包含 pay 方法)\nexport const PAYMENT_CONTRACT_ABI =[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePpm\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"initialTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialMinUnits\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"TokenWhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePpm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feePpmPerTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minUnitPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePpm\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newFeePpm\",\"type\":\"uint256\"}],\"name\":\"setFeePpmForTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minUnit\",\"type\":\"uint256\"}],\"name\":\"setMinUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setTokenWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedSeq\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\n\nexport const ERC2771_FORWARDER_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\n\n\nexport const erc2771ForwarderAddress = '0xC109B607A2228FF55b6341F0b926b3aE7FDe964c' as `0x${string}`;\nexport const EIP712_DOMAIN_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\" as `0x${string}`);\nexport const FORWARD_REQUEST_TYPEHASH = keccak256(\n  \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\" as `0x${string}`\n);\n\nexport const EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' }\n]\n\nexport const FORWARD_REQUEST_TYPES = {\n  ForwardRequest: [\n    { name: 'from', type: 'address' },\n    { name: 'to', type: 'address' },\n    { name: 'value', type: 'uint256' },\n    { name: 'gas', type: 'uint256' },\n    { name: 'nonce', type: 'uint256' },\n    { name: 'deadline', type: 'uint48' },\n    { name: 'data', type: 'bytes' }\n  ]\n}\n\nexport const contract7702Address = '0x38e424b5310DCB25c0eae5bc58D412D0eF699a7f' as `0x${string}`;\nexport const erc20Address = '0x540126734dee9B0e623c71c2a9ED44Ef4387A81F' as `0x${string}`;\n\nexport const contract7702Abi = [\n  {\n    \"inputs\": [],\n    \"name\": \"nonce\",\n    \"outputs\": [{\"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\"type\": \"bytes\", \"name\": \"data\"},\n          {\"type\": \"address\", \"name\": \"to\"},\n          {\"type\": \"uint256\", \"name\": \"value\"}\n        ],\n        \"type\": \"tuple[]\"\n      },\n      {\"type\": \"bytes\", \"name\": \"signature\"}\n    ],\n    \"name\": \"executeSponsor\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n] as const;\n\nexport const erc20Abi = [\n  {\n    \"inputs\": [\n      {\"type\": \"address\", \"name\": \"to\"},\n      {\"type\": \"uint256\", \"name\": \"amount\"}\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [{\"type\": \"bool\"}],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"type\": \"address\", \"name\": \"owner\"},\n      {\"type\": \"address\", \"name\": \"spender\"}\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [{\"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"type\": \"address\", \"name\": \"spender\"},\n      {\"type\": \"uint256\", \"name\": \"amount\"}\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [{\"type\": \"bool\"}],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{\"type\": \"address\", \"name\": \"account\"}],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n] as const; ","import { \n  createWalletClient, \n  createPublicClient, \n  http, \n  parseEther, \n  encodeFunctionData,\n  custom,\n  type WalletClient,\n  type PublicClient,\n  type Account,\n  type Hash,\n  type Address\n} from 'viem';\nimport { erc20Abi, erc2771ForwarderAddress, paymentContractAddress, UnifiedVaultContractAddress, UNIFIED_VAULT_ABI } from '../config/contract';\n\n// 检查是否在浏览器环境中\nconst isBrowser = typeof window !== 'undefined';\n\n// 安全地访问window.ethereum\nconst getEthereum = () => {\n  if (!isBrowser) {\n    return null;\n  }\n  return window.ethereum;\n};\n\nexport interface BlockchainConfig {\n  useMetaMask?: boolean;\n}\n\nexport class BlockchainService {\n  private wallet?: WalletClient;\n  private publicClient?: PublicClient;\n  private account?: Account;\n  private chainId?: number;\n  private config: BlockchainConfig;\n\n  constructor(config: BlockchainConfig = { useMetaMask: true }) {\n    this.config = config;\n  }\n\n  // 初始化客户端\n  private async initializeClients() {\n    console.log('开始初始化客户端...');\n    \n    if (this.config.useMetaMask) {\n      console.log('尝试使用 MetaMask...');\n      \n      // 检查是否在浏览器环境\n      if (!isBrowser) {\n        throw new Error('MetaMask只能在浏览器环境中使用');\n      }\n\n      const ethereum = getEthereum();\n      if (!ethereum) {\n        console.error('MetaMask 未安装');\n        throw new Error('MetaMask not found. Please install MetaMask extension.');\n      }\n    \n      console.log('检测到 MetaMask，创建钱包客户端...');\n      \n      try {\n        // 获取当前链ID\n        const chainIdHex = await ethereum.request({ method: 'eth_chainId' });\n        this.chainId = parseInt(chainIdHex as string, 16);\n        console.log('从 MetaMask 获取到链 ID:', this.chainId);\n        \n        // 使用 MetaMask 钱包\n        this.wallet = createWalletClient({\n          transport: custom(ethereum)\n        });\n        \n        console.log('钱包客户端创建完成');\n        \n        // 创建公共客户端\n        this.publicClient = createPublicClient({\n          transport: custom(ethereum)\n        });\n        \n        console.log('公共客户端创建完成');\n      } catch (error: any) {\n        console.error('初始化客户端失败:', error);\n        console.error('错误详情:', {\n          message: error.message,\n          code: error.code,\n          data: error.data\n        });\n        throw new Error(`初始化客户端失败: ${error.message}`);\n      }\n    } else {\n      console.warn('只支持 MetaMask，请设置 useMetaMask 为 true');\n      throw new Error('Currently only MetaMask is supported');\n    }\n  }\n\n  // 连接钱包\n  async connectWallet(): Promise<string> {\n    if (!this.config.useMetaMask) {\n      throw new Error('MetaMask is required');\n    }\n\n    // 确保客户端已初始化\n    if (!this.wallet || !this.publicClient) {\n      await this.initializeClients();\n    }\n\n    try {\n      console.log('请求连接钱包...');\n      const [address] = await this.wallet!.requestAddresses();\n      console.log('获取到钱包地址:', address);\n      \n      this.account = { address, type: 'json-rpc' };\n      \n      // 获取当前链ID\n      try {\n        const chainIdHex = await getEthereum()!.request({ method: 'eth_chainId' });\n        this.chainId = parseInt(chainIdHex as string, 16);\n        console.log('连接钱包后获取链 ID:', this.chainId);\n      } catch (chainError: any) {\n        console.warn('获取链 ID 失败:', chainError);\n        // 如果无法获取链ID，使用默认值\n        this.chainId = 1; // 以太坊主网\n        console.warn('使用默认链 ID:', this.chainId);\n      }\n      \n      console.log('钱包连接完成，地址:', address);\n      console.log('当前链 ID:', this.chainId);\n\n      return address; // 返回连接的地址\n    } catch (error: any) {\n      console.error('连接钱包失败:', error);\n      throw new Error(`连接钱包失败: ${error.message}`);\n    }\n  }\n\n  // 检查钱包状态\n  async ensureWalletConnected(): Promise<void> {\n    // 确保钱包已初始化和连接\n    if (!this.wallet || this.chainId === undefined || !this.account) {\n      console.log('钱包未初始化或未连接，尝试初始化和连接...');\n      \n      // 确保客户端已初始化\n      if (!this.wallet || !this.publicClient) {\n        console.log('初始化客户端...');\n        await this.initializeClients();\n      }\n      \n      // 确保已连接钱包\n      if (!this.account) {\n        console.log('连接钱包...');\n        await this.connectWallet();\n      }\n      \n      if (!this.wallet || this.chainId === undefined || !this.account) {\n        throw new Error('无法初始化或连接钱包');\n      }\n    }\n  }\n\n  // 检查是否已连接钱包\n  isConnected(): boolean {\n    return !!this.account;\n  }\n\n  // 获取当前连接的地址\n  getConnectedAddress(): string | undefined {\n    return this.account?.address;\n  }\n\n  // 获取当前连接的链ID\n  getChainId(): number | undefined {\n    return this.chainId;\n  }\n\n  // 获取账户\n  getAccount(): Account | undefined {\n    return this.account;\n  }\n\n  // 获取钱包客户端\n  getWalletClient(): WalletClient | undefined {\n    return this.wallet;\n  }\n\n  // 获取公共客户端\n  getPublicClient(): PublicClient | undefined {\n    return this.publicClient;\n  }\n\n  // 检查并确保代币授权\n  async ensureTokenAllowance(tokenAddress: string, spender: string, amount: bigint): Promise<boolean> {\n    await this.ensureWalletConnected();\n\n    // 查询当前allowance\n    const currentAllowance: bigint = await this.publicClient!.readContract({\n      address: tokenAddress as `0x${string}`,\n      abi: erc20Abi,\n      functionName: 'allowance',\n      args: [this.account!.address as `0x${string}`, spender as `0x${string}`]\n    }) as bigint;\n\n    console.log(`当前allowance: ${currentAllowance} 需要: ${amount}`);\n    if (currentAllowance >= amount) {\n      console.log('授权额度充足');\n      return true; // 不需要approve\n    }\n\n    // 额度不足，自动请求用户 approve\n    console.log('授权额度不足，发起approve...');\n\n    const approveHash = await this.wallet!.writeContract({\n      account: this.account!,\n      chain: this.chainId ? { id: this.chainId } as any : undefined,\n      address: tokenAddress as `0x${string}`,\n      abi: erc20Abi,\n      functionName: 'approve',\n      args: [spender as `0x${string}`, amount]\n    });\n\n    // 等待approve确认\n    console.log('等待approve确认...');\n    const receipt = await this.publicClient!.waitForTransactionReceipt({ hash: approveHash });\n    if (receipt.status !== 'success') {\n      throw new Error('ERC20 approve 失败！');\n    }\n    console.log('approve成功');\n    return true;\n  }\n\n  // 获取Nonce\n  async getNonce(address: string, options?: { timeout?: number }): Promise<bigint> {\n    await this.ensureWalletConnected();\n    \n    const timeout = options?.timeout ?? 10000; // 默认10秒\n  \n    try {\n      const nonce = await Promise.race([\n        this.publicClient!.readContract({\n          address: erc2771ForwarderAddress as `0x${string}`,\n          abi: [\n            {\n              \"inputs\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}],\n              \"name\": \"nonces\",\n              \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}],\n              \"stateMutability\": \"view\",\n              \"type\": \"function\"\n            }\n          ],\n          functionName: 'nonces',\n          args: [address as `0x${string}`]\n        }) as Promise<bigint>,\n        new Promise((_, reject) => setTimeout(() => reject(new Error('TimeoutError: readContract timeout')), timeout))\n      ]);\n      return nonce as bigint;\n    } catch (error) {\n      // 这里不吞掉错误，直接抛出\n      throw error;\n    }\n  }\n} ","import { type Hash } from 'viem';\nimport { erc20Abi } from '../../config/contract';\nimport { BlockchainService } from '../blockchain';\n\n/**\n * Token操作类\n * 负责处理ERC20代币的授权、检查等操作\n */\nexport class TokenOperations {\n  private blockchainService: BlockchainService;\n\n  constructor(blockchainService: BlockchainService) {\n    this.blockchainService = blockchainService;\n  }\n\n  /**\n   * 授权代币\n   * @param tokenAddress 代币地址\n   * @param spender 被授权者地址\n   * @param amount 授权金额\n   * @returns 交易哈希\n   */\n  async approveToken(tokenAddress: string, spender: string, amount: bigint): Promise<Hash> {\n    await this.blockchainService.ensureWalletConnected();\n    const wallet = this.blockchainService.getWalletClient();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!wallet || !account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    console.log(`开始授权代币 ${tokenAddress} 给 ${spender}，金额: ${amount.toString()}`);\n\n    const hash = await wallet.writeContract({\n      account,\n      chain: { id: chainId } as any,\n      address: tokenAddress as `0x${string}`,\n      abi: erc20Abi,\n      functionName: 'approve',\n      args: [spender as `0x${string}`, amount]\n    });\n\n    console.log('授权交易已发送，哈希:', hash);\n    return hash;\n  }\n\n  /**\n   * 检查授权额度\n   * @param tokenAddress 代币地址\n   * @param owner 代币持有者\n   * @param spender 被授权者\n   * @returns 当前授权额度\n   */\n  async checkAllowance(tokenAddress: string, owner: string, spender: string): Promise<bigint> {\n    await this.blockchainService.ensureWalletConnected();\n    const publicClient = this.blockchainService.getPublicClient();\n\n    if (!publicClient) {\n      throw new Error('公共客户端未初始化');\n    }\n\n    const allowance = await publicClient.readContract({\n      address: tokenAddress as `0x${string}`,\n      abi: erc20Abi,\n      functionName: 'allowance',\n      args: [owner as `0x${string}`, spender as `0x${string}`]\n    }) as bigint;\n\n    console.log(`当前授权额度: ${allowance.toString()}`);\n    return allowance;\n  }\n\n  /**\n   * 确保代币授权额度充足\n   * 如果授权不足会自动发起授权交易\n   * @param tokenAddress 代币地址\n   * @param spender 被授权者\n   * @param amount 需要的授权额度\n   * @returns 是否成功确保授权\n   */\n  async ensureTokenAllowance(tokenAddress: string, spender: string, amount: bigint): Promise<boolean> {\n    const owner = this.blockchainService.getConnectedAddress();\n    if (!owner) {\n      throw new Error('钱包未连接');\n    }\n\n    // 检查当前授权额度\n    const currentAllowance = await this.checkAllowance(tokenAddress, owner, spender);\n    \n    console.log(`检查授权额度: 当前 ${currentAllowance.toString()}, 需要 ${amount.toString()}`);\n    \n    if (currentAllowance >= amount) {\n      console.log('授权额度充足');\n      return true;\n    }\n\n    console.log('授权额度不足，发起授权交易...');\n    \n    // 发起授权交易\n    const approveHash = await this.approveToken(tokenAddress, spender, amount);\n    \n    // 等待交易确认\n    const publicClient = this.blockchainService.getPublicClient();\n    if (publicClient) {\n      console.log('等待授权交易确认...');\n      const receipt = await publicClient.waitForTransactionReceipt({ hash: approveHash });\n      if (receipt.status !== 'success') {\n        throw new Error('授权交易失败');\n      }\n      console.log('授权交易确认成功');\n    }\n\n    return true;\n  }\n\n  /**\n   * 获取代币余额\n   * @param tokenAddress 代币地址\n   * @param owner 持有者地址，如不提供则使用当前连接的地址\n   * @returns 代币余额\n   */\n  async getTokenBalance(tokenAddress: string, owner?: string): Promise<bigint> {\n    await this.blockchainService.ensureWalletConnected();\n    const publicClient = this.blockchainService.getPublicClient();\n\n    if (!publicClient) {\n      throw new Error('公共客户端未初始化');\n    }\n\n    const targetOwner = owner || this.blockchainService.getConnectedAddress();\n    if (!targetOwner) {\n      throw new Error('未指定查询地址且钱包未连接');\n    }\n\n    const balance = await publicClient.readContract({\n      address: tokenAddress as `0x${string}`,\n      abi: erc20Abi,\n      functionName: 'balanceOf',\n      args: [targetOwner as `0x${string}`]\n    }) as bigint;\n\n    console.log(`代币 ${tokenAddress} 余额: ${balance.toString()}`);\n    return balance;\n  }\n} ","import { type Hash, encodeFunctionData } from 'viem';\nimport { PAYMENT_CONTRACT_ABI, paymentContractAddress } from '../../config/contract';\nimport { BlockchainService } from '../blockchain';\nimport { TokenOperations } from './token';\n\n/**\n * 直接支付类\n * 负责处理用户付gas的直接支付操作\n */\nexport class DirectPayment {\n  private blockchainService: BlockchainService;\n  private tokenOperations: TokenOperations;\n\n  constructor(blockchainService: BlockchainService) {\n    this.blockchainService = blockchainService;\n    this.tokenOperations = new TokenOperations(blockchainService);\n  }\n\n  /**\n   * 用户直接支付（自己付gas）\n   * @param to 接收方地址\n   * @param amount 支付金额\n   * @param tokenAddress 代币地址，如不提供则为原生代币(ETH)\n   * @param seq 序列号，默认为当前时间戳\n   * @returns 交易哈希\n   */\n  async pay(\n    to: string,\n    amount: bigint,\n    tokenAddress?: string,\n    seq: bigint = BigInt(Math.floor(Date.now() / 1000))\n  ): Promise<Hash> {\n    await this.blockchainService.ensureWalletConnected();\n    const wallet = this.blockchainService.getWalletClient();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!wallet || !account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    console.log('开始直接支付:');\n    console.log('- 接收方:', to);\n    console.log('- 金额:', amount.toString());\n    console.log('- 代币地址:', tokenAddress || 'ETH');\n    console.log('- 序列号:', seq.toString());\n\n    // 如果是代币支付，确保有足够的授权\n    if (tokenAddress) {\n      await this.tokenOperations.ensureTokenAllowance(\n        tokenAddress,\n        paymentContractAddress,\n        amount\n      );\n    }\n\n    // 执行支付交易\n    const hash = await wallet.writeContract({\n      account,\n      chain: { id: chainId } as any,\n      address: paymentContractAddress as `0x${string}`,\n      abi: PAYMENT_CONTRACT_ABI,\n      functionName: 'pay',\n      args: [\n        (tokenAddress || '0x0000000000000000000000000000000000000000') as `0x${string}`,\n        to as `0x${string}`,\n        amount,\n        seq\n      ],\n      value: tokenAddress ? 0n : amount // 如果是原生代币，设置value\n    });\n\n    console.log('支付交易已发送，哈希:', hash);\n    return hash;\n  }\n\n  /**\n   * 编码支付函数调用数据\n   * @param token 代币地址\n   * @param to 接收方地址\n   * @param amount 金额\n   * @param seq 序列号\n   * @returns 编码后的调用数据\n   */\n  encodePayCallData(\n    token: string,\n    to: string,\n    amount: bigint,\n    seq: bigint = 0n\n  ): `0x${string}` {\n    const payData = encodeFunctionData({\n      abi: PAYMENT_CONTRACT_ABI,\n      functionName: 'pay',\n      args: [\n        token as `0x${string}`,\n        to as `0x${string}`,\n        amount,\n        seq\n      ]\n    }) as `0x${string}`;\n    \n    console.log('编码支付调用参数:');\n    console.log('- token:', token);\n    console.log('- to:', to);\n    console.log('- amount:', amount.toString());\n    console.log('- seq:', seq.toString());\n\n    return payData;\n  }\n} ","import { recoverTypedDataAddress } from 'viem';\nimport { \n  erc2771ForwarderAddress, \n  FORWARD_REQUEST_TYPES,\n  EIP712_DOMAIN_TYPE\n} from '../config/contract';\nimport { BlockchainService } from './blockchain';\n\n// 检查是否在浏览器环境中\nconst isBrowser = typeof window !== 'undefined';\n\nexport interface ForwardRequestData {\n  from: string;\n  to: string;\n  value: string;\n  gas: string;\n  nonce: string;\n  deadline: string;\n  data: string;\n}\n\n/**\n * 签名服务类\n * 负责处理EIP-712签名和验证\n */\nexport class SigningService {\n  private blockchainService: BlockchainService;\n\n  constructor(blockchainService: BlockchainService) {\n    this.blockchainService = blockchainService;\n  }\n\n  /**\n   * 验证EIP-712签名\n   */\n  async verifyTypedDataSignature({\n    chainId,\n    message,\n    signature,\n    expectedSigner\n  }: {\n    chainId: number,\n    message: any\n    signature: string\n    expectedSigner: string\n  }) {\n    const domain = {\n      name: 'MetaTxForwarder',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: erc2771ForwarderAddress \n    }\n    \n    const signer = await recoverTypedDataAddress({\n      domain,\n      types: FORWARD_REQUEST_TYPES,\n      primaryType: 'ForwardRequest',\n      message,\n      signature: signature as `0x${string}`\n    })\n    \n    const valid = signer.toLowerCase() === expectedSigner.toLowerCase()\n    return { valid, signer }\n  }\n\n  /**\n   * 生成 EIP-712 签名\n   */\n  async signTypedData(\n    request: ForwardRequestData,\n    chainId: number,\n    nonce: bigint\n  ): Promise<string> {\n    console.log('开始签名过程，参数:');\n    console.log('- 账户地址:', request.from);\n    console.log('- 链 ID:', chainId);\n    console.log('- Nonce:', nonce.toString());\n\n    const domain = {\n      name: 'MetaTxForwarder',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: erc2771ForwarderAddress \n    }\n    \n    // 确保所有值都是字符串形式，避免 BigInt 序列化问题\n    const safeRequest = {\n      from: request.from,\n      to: request.to,\n      value: request.value.toString(),\n      gas: request.gas.toString(),\n      nonce: request.nonce.toString(),\n      deadline: request.deadline.toString(),\n      data: request.data\n    };\n    \n    try {\n      // 获取钱包客户端\n      const wallet = this.blockchainService.getWalletClient();\n      const account = this.blockchainService.getAccount();\n      \n      if (!wallet || !account) {\n        throw new Error('钱包未连接或初始化失败');\n      }\n      \n      // 尝试直接使用 viem 的钱包客户端进行签名\n      if (wallet.signTypedData) {\n        console.log('使用 viem 钱包客户端签名...');\n        try {\n          const signature = await wallet.signTypedData({\n            account,\n            domain,\n            types: { ...FORWARD_REQUEST_TYPES },\n            primaryType: 'ForwardRequest',\n            message: safeRequest\n          });\n          console.log('viem 签名成功:', signature);\n          return signature as string;\n        } catch (viemError: any) {\n          console.warn('viem 签名失败，回退到原生方法:', viemError.message);\n        }\n      }\n      \n      // 回退到使用浏览器的原生签名方法\n      if (!isBrowser || !window.ethereum) {\n        throw new Error('浏览器环境不可用或未安装钱包');\n      }\n      \n      console.log('使用浏览器原生签名方法...');\n      \n      // 为钱包构建签名数据\n      const typedDataForWallet = {\n        domain: { ...domain, chainId: domain.chainId.toString() },\n        message: safeRequest,\n        primaryType: 'ForwardRequest',\n        types: {\n          EIP712Domain: EIP712_DOMAIN_TYPE,\n          ...FORWARD_REQUEST_TYPES\n        },\n      };\n      \n      let signature: string;\n      \n      // 尝试 eth_signTypedData_v4，如果不支持则回退到其他方法\n      try {\n        signature = await window.ethereum.request({\n          method: 'eth_signTypedData_v4',\n          params: [\n            request.from,\n            JSON.stringify(typedDataForWallet)\n          ]\n        });\n      } catch (v4Error: any) {\n        console.warn('eth_signTypedData_v4 失败，尝试 eth_signTypedData_v3');\n        signature = await window.ethereum.request({\n          method: 'eth_signTypedData_v3',\n          params: [\n            request.from,\n            JSON.stringify(typedDataForWallet)\n          ]\n        });\n      }\n      \n      // 验证签名\n      const { valid, signer } = await this.verifyTypedDataSignature({\n        chainId,\n        message: safeRequest,\n        signature: signature,\n        expectedSigner: request.from\n      });\n      \n      console.log('签名验证：', valid, signer);\n      \n      if (!valid) {\n        throw new Error('签名验证失败');\n      }\n      \n      console.log('签名成功:', signature);\n      return signature;\n    } catch (error: any) {\n      console.error('签名过程中出错:', error);\n      throw new Error(`签名失败: ${error.message}`);\n    }\n  }\n} ","import { paymentContractAddress } from '../../config/contract';\nimport { BlockchainService } from '../blockchain';\nimport { TokenOperations } from './token';\nimport { DirectPayment } from './direct-payment';\nimport { SigningService } from '../signing';\n\n/**\n * 统一的中继请求数据格式\n */\nexport interface RelayedRequestData {\n  from: string;\n  to: string;\n  value: string;\n  gas: string;\n  nonce: string;\n  deadline: string;\n  data: string;\n  signature?: string;\n}\n\n/**\n * 中继支付类\n * 负责处理代付gas的支付操作，返回统一格式的签名数据\n */\nexport class RelayedPayment {\n  private blockchainService: BlockchainService;\n  private tokenOperations: TokenOperations;\n  private directPayment: DirectPayment;\n  private signingService: SigningService;\n\n  constructor(blockchainService: BlockchainService) {\n    this.blockchainService = blockchainService;\n    this.tokenOperations = new TokenOperations(blockchainService);\n    this.directPayment = new DirectPayment(blockchainService);\n    this.signingService = new SigningService(blockchainService);\n  }\n\n  /**\n   * 准备代付gas的支付请求（仅签名，不发送）\n   * @param to 接收方地址\n   * @param amount 支付金额\n   * @param tokenAddress 代币地址，如不提供则为原生代币\n   * @param seq 序列号，默认为当前时间戳\n   * @param deadlineSeconds 过期时间（秒），默认3600秒\n   * @returns 包含签名的中继请求数据\n   */\n  async preparePayment(\n    to: string,\n    amount: bigint,\n    tokenAddress?: string,\n    seq: bigint = BigInt(Math.floor(Date.now() / 1000)),\n    deadlineSeconds: number = 3600\n  ): Promise<RelayedRequestData> {\n    await this.blockchainService.ensureWalletConnected();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    console.log('准备代付gas支付请求:');\n    console.log('- 接收方:', to);\n    console.log('- 金额:', amount.toString());\n    console.log('- 代币地址:', tokenAddress || 'ETH');\n    console.log('- 序列号:', seq.toString());\n    console.log('- 过期时间(秒):', deadlineSeconds);\n\n    // 如果是代币支付，确保有足够的授权\n    if (tokenAddress) {\n      await this.tokenOperations.ensureTokenAllowance(\n        tokenAddress,\n        paymentContractAddress,\n        amount\n      );\n    }\n\n    // 编码支付函数调用\n    const payCallData = this.directPayment.encodePayCallData(\n      tokenAddress || '0x0000000000000000000000000000000000000000',\n      to,\n      amount,\n      seq\n    );\n\n    // 设置截止时间 (当前时间 + 指定秒数)\n    const deadline = Math.floor(Date.now() / 1000) + deadlineSeconds;\n    \n    // 获取用户地址的 nonce\n    const userNonce = await this.blockchainService.getNonce(account.address);\n    \n    // 创建符合统一格式的请求数据\n    const request: RelayedRequestData = {\n      from: account.address,\n      to: paymentContractAddress,\n      value: tokenAddress ? '0' : amount.toString(), // 如果是代币支付，value为0\n      gas: '3000000', // 设置合理的 gas 限制\n      nonce: userNonce.toString(),\n      deadline: deadline.toString(),\n      data: payCallData\n    };\n\n    console.log('构建的请求数据:', request);\n\n    // 尝试生成签名\n    try {\n      const signature = await this.signingService.signTypedData(request, chainId, userNonce);\n      request.signature = signature;\n      console.log('签名成功');\n    } catch (signError: any) {\n      console.error('签名失败:', signError);\n      console.warn('返回未签名的请求数据');\n    }\n\n    return request;\n  }\n} ","import { type Hash, encodeFunctionData } from 'viem';\nimport { UnifiedVaultContractAddress, UNIFIED_VAULT_ABI } from '../../config/contract';\nimport { BlockchainService } from '../blockchain';\nimport { TokenOperations } from './token';\nimport { SigningService } from '../signing';\nimport { RelayedRequestData } from './relayed-payment';\n\n/**\n * Vault操作类\n * 负责处理UnifiedVault相关的存款、提现、消费操作\n */\nexport class VaultOperations {\n  private blockchainService: BlockchainService;\n  private tokenOperations: TokenOperations;\n  private signingService: SigningService;\n\n  constructor(blockchainService: BlockchainService) {\n    this.blockchainService = blockchainService;\n    this.tokenOperations = new TokenOperations(blockchainService);\n    this.signingService = new SigningService(blockchainService);\n  }\n\n  /**\n   * 向金库存款（用户付gas）\n   * @param tokenAddress 代币地址\n   * @param amount 存款金额\n   * @returns 交易哈希\n   */\n  async deposit(tokenAddress: string, amount: bigint): Promise<Hash> {\n    await this.blockchainService.ensureWalletConnected();\n    const wallet = this.blockchainService.getWalletClient();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!wallet || !account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    console.log('开始存款到金库:');\n    console.log('- 代币地址:', tokenAddress);\n    console.log('- 存款金额:', amount.toString());\n\n    // 确保有足够的授权\n    await this.tokenOperations.ensureTokenAllowance(\n      tokenAddress,\n      UnifiedVaultContractAddress,\n      amount\n    );\n\n    // 执行deposit交易\n    const hash = await wallet.writeContract({\n      account,\n      chain: { id: chainId } as any,\n      address: UnifiedVaultContractAddress as `0x${string}`,\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'deposit',\n      args: [\n        tokenAddress as `0x${string}`,\n        amount\n      ]\n    });\n\n    console.log('存款交易已发送，哈希:', hash);\n    return hash;\n  }\n\n  /**\n   * 从金库提现（用户付gas）\n   * @param tokenAddress 代币地址\n   * @param amount 提现金额\n   * @returns 交易哈希\n   */\n  async withdraw(tokenAddress: string, amount: bigint): Promise<Hash> {\n    await this.blockchainService.ensureWalletConnected();\n    const wallet = this.blockchainService.getWalletClient();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!wallet || !account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    console.log('开始从金库提现:');\n    console.log('- 代币地址:', tokenAddress);\n    console.log('- 提现金额:', amount.toString());\n\n    // 执行withdraw交易\n    const hash = await wallet.writeContract({\n      account,\n      chain: { id: chainId } as any,\n      address: UnifiedVaultContractAddress as `0x${string}`,\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'withdraw',\n      args: [\n        tokenAddress as `0x${string}`,\n        amount\n      ]\n    });\n\n    console.log('提现交易已发送，哈希:', hash);\n    return hash;\n  }\n\n  /**\n   * 用户直接从金库消费（自己付gas）\n   * @param merchantId 商家ID\n   * @param tokenAddress 代币地址\n   * @param amount 消费金额\n   * @param voucherId 代金券ID\n   * @param pointToUse 使用的积分\n   * @param seq 序列号\n   * @returns 交易哈希\n   */\n  async consumeDirect(\n    merchantId: string,\n    tokenAddress: string,\n    amount: bigint,\n    voucherId: bigint = 0n,\n    pointToUse: bigint = 0n,\n    seq: bigint = BigInt(Math.floor(Date.now() / 1000))\n  ): Promise<Hash> {\n    await this.blockchainService.ensureWalletConnected();\n    const wallet = this.blockchainService.getWalletClient();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!wallet || !account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    console.log('开始直接消费:');\n    console.log('- 商家ID:', merchantId);\n    console.log('- 代币地址:', tokenAddress);\n    console.log('- 消费金额:', amount.toString());\n    console.log('- 代金券ID:', voucherId.toString());\n    console.log('- 使用积分:', pointToUse.toString());\n    console.log('- 序列号:', seq.toString());\n\n    // 执行consume交易\n    const hash = await wallet.writeContract({\n      account,\n      chain: { id: chainId } as any,\n      address: UnifiedVaultContractAddress as `0x${string}`,\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'consume',\n      args: [\n        merchantId as `0x${string}`,\n        tokenAddress as `0x${string}`,\n        amount,\n        voucherId,\n        pointToUse,\n        seq\n      ]\n    });\n\n    console.log('消费交易已发送，哈希:', hash);\n    return hash;\n  }\n\n  /**\n   * 准备代付gas的消费请求（仅签名，不发送）\n   * @param merchantId 商家ID\n   * @param tokenAddress 代币地址\n   * @param amount 消费金额\n   * @param voucherId 代金券ID\n   * @param pointToUse 使用的积分\n   * @param seq 序列号\n   * @param deadlineSeconds 过期时间（秒），默认3600秒\n   * @returns 包含签名的中继请求数据\n   */\n  async prepareRelayedConsume(\n    merchantId: string,\n    tokenAddress: string,\n    amount: bigint,\n    voucherId: bigint = 0n,\n    pointToUse: bigint = 0n,\n    seq: bigint = BigInt(Math.floor(Date.now() / 1000)),\n    deadlineSeconds: number = 3600\n  ): Promise<RelayedRequestData> {\n    await this.blockchainService.ensureWalletConnected();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    console.log('准备代付gas消费请求:');\n    console.log('- 商家ID:', merchantId);\n    console.log('- 代币地址:', tokenAddress);\n    console.log('- 消费金额:', amount.toString());\n    console.log('- 代金券ID:', voucherId.toString());\n    console.log('- 使用积分:', pointToUse.toString());\n    console.log('- 序列号:', seq.toString());\n    console.log('- 过期时间(秒):', deadlineSeconds);\n\n    // 编码consume函数调用\n    const consumeCallData = encodeFunctionData({\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'consume',\n      args: [\n        merchantId as `0x${string}`,\n        tokenAddress as `0x${string}`,\n        amount,\n        voucherId,\n        pointToUse,\n        seq\n      ]\n    }) as `0x${string}`;\n\n    // 设置截止时间 (当前时间 + 指定秒数)\n    const deadline = Math.floor(Date.now() / 1000) + deadlineSeconds;\n    \n    // 获取用户地址的 nonce\n    const userNonce = await this.blockchainService.getNonce(account.address);\n    \n    // 创建符合统一格式的请求数据\n    const request: RelayedRequestData = {\n      from: account.address,\n      to: UnifiedVaultContractAddress,\n      value: '0', // consume 不需要发送ETH\n      gas: '3000000', // 设置合理的 gas 限制\n      nonce: userNonce.toString(),\n      deadline: deadline.toString(),\n      data: consumeCallData\n    };\n\n    console.log('构建的请求数据:', request);\n\n    // 尝试生成签名\n    try {\n      const signature = await this.signingService.signTypedData(request, chainId, userNonce);\n      request.signature = signature;\n      console.log('签名成功');\n    } catch (signError: any) {\n      console.error('签名失败:', signError);\n      console.warn('返回未签名的请求数据');\n    }\n\n    return request;\n  }\n\n  /**\n   * 获取用户在金库中的余额\n   * @param tokenAddress 代币地址\n   * @param userAddress 用户地址，如不提供则使用当前连接的地址\n   * @returns 余额\n   */\n  async getVaultBalance(tokenAddress: string, userAddress?: string): Promise<bigint> {\n    await this.blockchainService.ensureWalletConnected();\n    const publicClient = this.blockchainService.getPublicClient();\n\n    if (!publicClient) {\n      throw new Error('公共客户端未初始化');\n    }\n\n    const targetUser = userAddress || this.blockchainService.getConnectedAddress();\n    if (!targetUser) {\n      throw new Error('未指定查询地址且钱包未连接');\n    }\n\n    const balance = await publicClient.readContract({\n      address: UnifiedVaultContractAddress as `0x${string}`,\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'getUserBalance',\n      args: [targetUser as `0x${string}`, tokenAddress as `0x${string}`]\n    }) as bigint;\n\n    console.log(`金库余额 ${tokenAddress}: ${balance.toString()}`);\n    return balance;\n  }\n\n  /**\n   * 获取用户的积分\n   * @param merchantId 商家ID\n   * @param userAddress 用户地址，如不提供则使用当前连接的地址\n   * @returns 积分数量\n   */\n  async getUserPoints(merchantId: string, userAddress?: string): Promise<bigint> {\n    await this.blockchainService.ensureWalletConnected();\n    const publicClient = this.blockchainService.getPublicClient();\n\n    if (!publicClient) {\n      throw new Error('公共客户端未初始化');\n    }\n\n    const targetUser = userAddress || this.blockchainService.getConnectedAddress();\n    if (!targetUser) {\n      throw new Error('未指定查询地址且钱包未连接');\n    }\n\n    const points = await publicClient.readContract({\n      address: UnifiedVaultContractAddress as `0x${string}`,\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'getUserPoints',\n      args: [targetUser as `0x${string}`, merchantId as `0x${string}`]\n    }) as bigint;\n\n    console.log(`用户积分 ${merchantId}: ${points.toString()}`);\n    return points;\n  }\n} ","import { BlockchainService, BlockchainConfig } from './blockchain';\nimport { TokenOperations } from './operations/token';\nimport { DirectPayment } from './operations/direct-payment';\nimport { RelayedPayment, RelayedRequestData } from './operations/relayed-payment';\nimport { VaultOperations } from './operations/vault';\nimport type { Hash } from 'viem';\n\n/**\n * Web3Delegate主类\n * 提供统一的接口来访问所有区块链操作功能\n */\nexport class Web3Delegate {\n  private blockchainService: BlockchainService;\n  \n  // 各功能模块\n  public readonly token: TokenOperations;\n  public readonly directPayment: DirectPayment;\n  public readonly relayedPayment: RelayedPayment;\n  public readonly vault: VaultOperations;\n\n  constructor(config: BlockchainConfig = { useMetaMask: true }) {\n    // 初始化基础服务\n    this.blockchainService = new BlockchainService(config);\n    \n    // 初始化各功能模块\n    this.token = new TokenOperations(this.blockchainService);\n    this.directPayment = new DirectPayment(this.blockchainService);\n    this.relayedPayment = new RelayedPayment(this.blockchainService);\n    this.vault = new VaultOperations(this.blockchainService);\n  }\n\n  // === 基础钱包操作 ===\n\n  /**\n   * 连接钱包\n   * @returns 连接的钱包地址\n   */\n  async connectWallet(): Promise<string> {\n    return this.blockchainService.connectWallet();\n  }\n\n  /**\n   * 检查钱包是否已连接\n   * @returns 是否已连接\n   */\n  isConnected(): boolean {\n    return this.blockchainService.isConnected();\n  }\n\n  /**\n   * 获取当前连接的钱包地址\n   * @returns 当前连接的钱包地址\n   */\n  getConnectedAddress(): string | undefined {\n    return this.blockchainService.getConnectedAddress();\n  }\n\n  /**\n   * 获取当前连接的链ID\n   * @returns 当前连接的链ID\n   */\n  getChainId(): number | undefined {\n    return this.blockchainService.getChainId();\n  }\n\n  // === 向后兼容的快捷方法 ===\n\n  /**\n   * ERC20代币授权\n   * @param tokenAddress 代币地址\n   * @param spender 被授权者地址\n   * @param amount 授权金额\n   * @returns 交易哈希\n   */\n  async approveToken(tokenAddress: string, spender: string, amount: bigint): Promise<Hash> {\n    return this.token.approveToken(tokenAddress, spender, amount);\n  }\n\n  /**\n   * 检查代币授权额度\n   * @param tokenAddress 代币地址\n   * @param owner 代币持有者\n   * @param spender 被授权者\n   * @returns 授权额度\n   */\n  async checkAllowance(tokenAddress: string, owner: string, spender: string): Promise<bigint> {\n    return this.token.checkAllowance(tokenAddress, owner, spender);\n  }\n\n  /**\n   * 确保代币授权额度充足\n   * @param tokenAddress 代币地址\n   * @param spender 被授权者\n   * @param amount 需要的授权额度\n   * @returns 是否授权成功\n   */\n  async ensureTokenAllowance(tokenAddress: string, spender: string, amount: bigint): Promise<boolean> {\n    return this.token.ensureTokenAllowance(tokenAddress, spender, amount);\n  }\n\n  /**\n   * 用户直接支付（自己付gas）\n   * @param to 接收方地址\n   * @param amount 支付金额\n   * @param tokenAddress 代币地址，如不提供则为原生代币\n   * @param seq 序列号，默认为当前时间戳\n   * @returns 交易哈希\n   */\n  async userPayDirect(to: string, amount: bigint, tokenAddress?: string, seq?: bigint): Promise<Hash> {\n    return this.directPayment.pay(to, amount, tokenAddress, seq);\n  }\n\n  /**\n   * 准备代付gas的支付请求（仅签名，不发送）\n   * @param to 接收方地址\n   * @param amount 支付金额\n   * @param tokenAddress 代币地址，如不提供则为原生代币\n   * @param seq 序列号，默认为当前时间戳\n   * @param deadlineSeconds 过期时间（秒），默认3600秒\n   * @returns 包含签名的请求数据\n   */\n  async prepareRelayedPayment(\n    to: string, \n    amount: bigint, \n    tokenAddress?: string, \n    seq?: bigint, \n    deadlineSeconds: number = 3600\n  ): Promise<RelayedRequestData> {\n    return this.relayedPayment.preparePayment(to, amount, tokenAddress, seq, deadlineSeconds);\n  }\n\n  /**\n   * 向金库存款（用户付gas）\n   * @param tokenAddress 代币地址\n   * @param amount 存款金额\n   * @returns 交易哈希\n   */\n  async depositToVault(tokenAddress: string, amount: bigint): Promise<Hash> {\n    return this.vault.deposit(tokenAddress, amount);\n  }\n\n  /**\n   * 从金库提现（用户付gas）\n   * @param tokenAddress 代币地址\n   * @param amount 提现金额\n   * @returns 交易哈希\n   */\n  async withdrawFromVault(tokenAddress: string, amount: bigint): Promise<Hash> {\n    return this.vault.withdraw(tokenAddress, amount);\n  }\n\n  /**\n   * 用户直接从金库消费（自己付gas）\n   * @param merchantId 商家ID\n   * @param tokenAddress 代币地址\n   * @param amount 消费金额\n   * @param voucherId 代金券ID\n   * @param pointToUse 使用的积分\n   * @param seq 序列号\n   * @returns 交易哈希\n   */\n  async consumeFromVault(\n    merchantId: string,\n    tokenAddress: string,\n    amount: bigint,\n    voucherId: bigint = 0n,\n    pointToUse: bigint = 0n,\n    seq?: bigint\n  ): Promise<Hash> {\n    return this.vault.consumeDirect(\n      merchantId,\n      tokenAddress,\n      amount,\n      voucherId,\n      pointToUse,\n      seq\n    );\n  }\n\n  /**\n   * 准备代付gas的金库消费请求（仅签名，不发送）\n   * @param merchantId 商家ID\n   * @param tokenAddress 代币地址\n   * @param amount 消费金额\n   * @param voucherId 代金券ID\n   * @param pointToUse 使用的积分\n   * @param seq 序列号\n   * @param deadlineSeconds 过期时间（秒）\n   * @returns 包含签名的请求数据\n   */\n  async prepareRelayedConsume(\n    merchantId: string,\n    tokenAddress: string,\n    amount: bigint,\n    voucherId: bigint = 0n,\n    pointToUse: bigint = 0n,\n    seq?: bigint,\n    deadlineSeconds: number = 3600\n  ): Promise<RelayedRequestData> {\n    return this.vault.prepareRelayedConsume(\n      merchantId,\n      tokenAddress,\n      amount,\n      voucherId,\n      pointToUse,\n      seq,\n      deadlineSeconds\n    );\n  }\n}\n\n// 导出所有类型和类\nexport type { RelayedRequestData } from './operations/relayed-payment';\nexport type { ForwardRequestData } from './signing';\nexport type { BlockchainConfig } from './blockchain';\n\nexport { BlockchainService } from './blockchain';\nexport { TokenOperations } from './operations/token';\nexport { DirectPayment } from './operations/direct-payment';\nexport { RelayedPayment } from './operations/relayed-payment';\nexport { VaultOperations } from './operations/vault';\nexport { SigningService } from './signing';\n\n// 默认导出\nexport default Web3Delegate; ","import { \n  createWalletClient, \n  createPublicClient, \n  http, \n  parseEther, \n  encodeFunctionData, \n  keccak256, \n  encodePacked,\n  recoverAddress,\n  hashTypedData,\n  recoverTypedDataAddress,\n  type WalletClient,\n  type PublicClient,\n  type Hash,\n  type Account,\n  type Address,\n  custom\n} from 'viem';\nimport { DelegateConfig, TransferParams, ProcessResult } from '../types';\nimport { _TypedDataEncoder } from '@ethersproject/hash';\nimport { ethers } from 'ethers';\nimport { erc20Abi,PAYMENT_CONTRACT_ABI,paymentContractAddress,erc2771ForwarderAddress,UnifiedVaultContractAddress,UNIFIED_VAULT_ABI,FORWARD_REQUEST_TYPEHASH,EIP712_DOMAIN_TYPE,FORWARD_REQUEST_TYPES,EIP712_DOMAIN_HASH } from '../config/contract';\nimport { Web3Delegate } from './index';\nimport { RelayedRequestData } from './operations/relayed-payment';\n\n// 检查是否在浏览器环境中\nconst isBrowser = typeof window !== 'undefined';\n\n// 安全地访问window.ethereum\nconst getEthereum = () => {\n  if (!isBrowser) {\n    return null;\n  }\n  return window.ethereum;\n};\n\n// 添加生成 EIP-712 签名的函数\nasync function signTypedData(\n  wallet: WalletClient,\n  account: Account,\n  request: any,\n  chainId: number,\n  nonce: bigint\n): Promise<string> {\n  console.log('开始签名过程，参数:');\n  console.log('- 账户地址:', account.address);\n  console.log('- 链 ID:', chainId);\n  console.log('- Nonce:', nonce.toString());\n  console.log('- 请求数据:', request);\n\n  const domain = {\n    name: 'MetaTxForwarder',\n    version: '1',\n    chainId: chainId, // 你的链ID\n    verifyingContract: erc2771ForwarderAddress \n  }\n\n  // 确保所有值都是字符串形式，避免 BigInt 序列化问题\n  const safeRequest = {\n    from: request.from,\n    to: request.to,\n    value: request.value.toString(),\n    gas: request.gas.toString(),\n    nonce: request.nonce.toString(),\n    deadline: request.deadline.toString(),\n    data: request.data\n  };\n  \n  try {\n    // 尝试直接使用 viem 的钱包客户端进行签名\n    if (wallet.signTypedData) {\n      console.log('使用 viem 钱包客户端签名...');\n      const signature = await wallet.signTypedData({\n        account,\n        domain,\n        types: { ...FORWARD_REQUEST_TYPES },\n        primaryType: 'ForwardRequest',\n        message: safeRequest\n      });\n      console.log('viem 签名成功:', signature);\n      // return signature as string;\n    \n    }\n\n    // 如果 viem 方法不可用，回退到直接使用 window.ethereum\n    console.log('回退到 window.ethereum 直接签名...');\n    \n    // 确保 window.ethereum 存在\n    const ethereum = getEthereum();\n    if (!ethereum) {\n      throw new Error('MetaMask 未安装或不可用');\n    }\n    \n    // 为 MetaMask 构建完整的 EIP-712 数据结构，包含 EIP712Domain 类型\n    const typedDataForMetaMask = {\n      domain: { ...domain, chainId: domain.chainId.toString() },\n      message: safeRequest,\n      primaryType: 'ForwardRequest',\n      types: {\n        EIP712Domain: EIP712_DOMAIN_TYPE,\n        ...FORWARD_REQUEST_TYPES\n      },\n    };\n    \n    console.log('调用 eth_signTypedData_v4...');\n    const signature = await ethereum.request({\n      method: 'eth_signTypedData_v4',\n      params: [\n        account.address,\n        JSON.stringify(typedDataForMetaMask)\n      ]\n    });\n    const { valid, signer } = await verifyTypedDataSignature({\n      chainId,\n      message: request,    // 或 safeRequest\n      signature: signature,\n      expectedSigner: request.from\n    })\n    console.log('签名验证：', valid, signer)\n   \n    console.log('MetaMask 签名成功:', signature);\n    return signature as string;\n  } catch (error: any) {\n    console.error('签名过程中出错:', error);\n    console.error('错误详情:', {\n      message: error.message,\n      code: error.code,\n      data: error.data\n    });\n    throw new Error(`签名失败: ${error.message}`);\n  }\n}\n\n/**\n * 为向后兼容而保留的类\n * 使用新的Web3Delegate作为底层实现\n */\nexport class PaymentDelegate {\n  private delegate: Web3Delegate;\n  private config: DelegateConfig;\n\n  constructor(config: DelegateConfig) {\n    this.config = config;\n    this.delegate = new Web3Delegate({ useMetaMask: config.useMetaMask });\n  }\n\n  // === 基础钱包操作 ===\n\n  /**\n   * 连接钱包\n   */\n  async connectWallet(): Promise<string> {\n    return this.delegate.connectWallet();\n  }\n\n  /**\n   * 检查是否已连接钱包\n   */\n  isConnected(): boolean {\n    return this.delegate.isConnected();\n  }\n\n  /**\n   * 获取当前连接的地址\n   */\n  getConnectedAddress(): string | undefined {\n    return this.delegate.getConnectedAddress();\n  }\n\n  /**\n   * 获取当前连接的链ID\n   */\n  getChainId(): number | undefined {\n    return this.delegate.getChainId();\n  }\n\n  // === 向后兼容的方法 ===\n\n  /**\n   * 旧的处理转账方法，为了向后兼容而保留\n   * 使用新架构下的代付gas支付功能\n   */\n  async processTransfer(params: TransferParams): Promise<any> {\n    try {\n      console.log('开始处理转账（向后兼容模式）...');\n      \n      // 使用新接口实现支付功能\n      const relayedRequest: RelayedRequestData = await this.delegate.prepareRelayedPayment(\n        params.to,\n        params.amount,\n        params.tokenAddress,\n        params.seq\n      );\n      \n      // 构建 pay 函数的参数对象，用于旧的接口兼容\n      const payParams = {\n        token: params.tokenAddress || '0x0000000000000000000000000000000000000000',\n        to: params.to,\n        amount: params.amount.toString(),\n        seq: (params.seq || BigInt(Math.floor(Date.now() / 1000))).toString(),\n        payer: this.delegate.getConnectedAddress() || ''\n      };\n      \n      // 返回包含签名的完整请求和 pay 参数\n      return {\n        request: {\n          from: relayedRequest.from,\n          to: relayedRequest.to,\n          value: relayedRequest.value,\n          gas: relayedRequest.gas,\n          nonce: relayedRequest.nonce,\n          deadline: relayedRequest.deadline,\n          data: relayedRequest.data,\n          signature: relayedRequest.signature\n        },\n        payParams // 为向后兼容保留\n      };\n    } catch (error: any) {\n      console.error('处理转账失败:', error);\n      throw new Error(`处理转账失败: ${error.message}`);\n    }\n  }\n\n  // === 直接暴露新功能的方法 ===\n\n  /**\n   * 获取Token操作实例\n   */\n  get token() {\n    return this.delegate.token;\n  }\n\n  /**\n   * 获取直接支付操作实例\n   */\n  get directPayment() {\n    return this.delegate.directPayment;\n  }\n\n  /**\n   * 获取代付gas支付操作实例\n   */\n  get relayedPayment() {\n    return this.delegate.relayedPayment;\n  }\n\n  /**\n   * 获取金库操作实例\n   */\n  get vault() {\n    return this.delegate.vault;\n  }\n}\n\n// 向后兼容的签名验证函数\nexport async function verifyTypedDataSignature({\n  chainId,\n  types = FORWARD_REQUEST_TYPES,\n  message,\n  signature,\n  expectedSigner\n}: {\n  chainId: number,\n  types?: typeof FORWARD_REQUEST_TYPES\n  message: any\n  signature: string\n  expectedSigner: string\n}) {\n  const domain = {\n    name: 'MetaTxForwarder',\n    version: '1',\n    chainId: chainId,\n    verifyingContract: erc2771ForwarderAddress \n  }\n  \n  const signer = await recoverTypedDataAddress({\n    domain,\n    types,\n    primaryType: 'ForwardRequest',\n    message,\n    signature: signature as `0x${string}`\n  })\n  \n  const valid = signer.toLowerCase() === expectedSigner.toLowerCase()\n  return { valid, signer }\n}\n\n\n\n \n\n\n\n"],"names":["UnifiedVaultContractAddress","UNIFIED_VAULT_ABI","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","paymentContractAddress","PAYMENT_CONTRACT_ABI","erc2771ForwarderAddress","keccak256","EIP712_DOMAIN_TYPE","FORWARD_REQUEST_TYPES","ForwardRequest","erc20Abi","isBrowser","window","getEthereum","ethereum","BlockchainService","constructor","config","useMetaMask","this","initializeClients","console","log","warn","Error","error","chainIdHex","request","method","chainId","parseInt","wallet","createWalletClient","transport","custom","publicClient","createPublicClient","message","code","data","connectWallet","address","requestAddresses","account","chainError","ensureWalletConnected","undefined","isConnected","getConnectedAddress","getChainId","getAccount","getWalletClient","getPublicClient","ensureTokenAllowance","tokenAddress","spender","amount","currentAllowance","readContract","abi","functionName","args","approveHash","writeContract","chain","id","waitForTransactionReceipt","hash","status","getNonce","options","timeout","Promise","race","_","reject","setTimeout","TokenOperations","blockchainService","approveToken","toString","checkAllowance","owner","allowance","getTokenBalance","targetOwner","balance","DirectPayment","tokenOperations","pay","to","seq","BigInt","Math","floor","Date","now","value","encodePayCallData","token","payData","encodeFunctionData","SigningService","verifyTypedDataSignature","signature","expectedSigner","domain","version","verifyingContract","signer","recoverTypedDataAddress","types","primaryType","valid","toLowerCase","signTypedData","nonce","from","safeRequest","gas","deadline","viemError","typedDataForWallet","EIP712Domain","params","JSON","stringify","v4Error","RelayedPayment","directPayment","signingService","preparePayment","deadlineSeconds","payCallData","userNonce","signError","VaultOperations","deposit","withdraw","consumeDirect","merchantId","voucherId","pointToUse","prepareRelayedConsume","consumeCallData","getVaultBalance","userAddress","targetUser","getUserPoints","points","Web3Delegate","relayedPayment","vault","userPayDirect","prepareRelayedPayment","depositToVault","withdrawFromVault","consumeFromVault","delegate","processTransfer","relayedRequest","payParams","payer"],"mappings":"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"}