{"version":3,"file":"index.esm.js","sources":["../src/config/contract.ts","../src/core/wallet-service.ts","../src/core/blockchain.ts","../src/core/merchant-manager.ts","../src/core/merchant-config-manager.ts","../src/types/index.ts","../src/core/relayer-service.ts","../src/core/signing.ts","../src/core/transaction.ts"],"sourcesContent":["import { \n  keccak256,\n} from 'viem';\n\nexport const UnifiedVaultContractAddress = '0x9fAb129F2a9CC1756772B73797ec4F37B86Ffc14' as `0x${string}`;\nexport const UNIFIED_VAULT_ABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRuleProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discountedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"merchantRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"Consumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"promoTiersEnabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"discountEnabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discountBase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"cashbackPointEnabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackPointBase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackPointAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"cashbackVoucherEnabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackVoucherBase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashbackVoucherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherExpirePeriod\",\"type\":\"uint256\"}],\"name\":\"MerchantConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"MerchantOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"MerchantRecipientsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"TokenWhitelistChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"name\":\"VoucherGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointToUse\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRuleProvider\",\"outputs\":[{\"internalType\":\"contract IFeeRuleProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"}],\"name\":\"getMerchantConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"promoTiersEnabled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct UnifiedMerchantVault.PromoTier[]\",\"name\":\"promoTiers\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"discountEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"discountBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackPointEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackVoucherEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherExpirePeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct UnifiedMerchantVault.MerchantConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"}],\"name\":\"getMerchantPromoTiers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct UnifiedMerchantVault.PromoTier[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"}],\"name\":\"getMyPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyVouchers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"}],\"name\":\"getUserPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"}],\"name\":\"getVoucher\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"used\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"grantPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"name\":\"grantVoucher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merchantConfigs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"promoTiersEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discountEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"discountBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackPointEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackVoucherEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherExpirePeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merchantOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merchantRecipients\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextVoucherId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"promoTiersEnabled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct UnifiedMerchantVault.PromoTier[]\",\"name\":\"promoTiers\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"discountEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"discountBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discountRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackPointEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackPointAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cashbackVoucherEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashbackVoucherAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voucherExpirePeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct UnifiedMerchantVault.MerchantConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setMerchantConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setMerchantOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"setMerchantRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setTokenWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedSeq\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"userPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userVouchers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vouchers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"used\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];\nexport const paymentContractAddress = '0xA03337a0CFa75f2ED53b2b5cb5E5cF22819De6dA' as `0x${string}`;\n\n// PaymentContract ABI (只包含 pay 方法)\nexport const PAYMENT_CONTRACT_ABI =[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePpm\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"initialTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialMinUnits\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"TokenWhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePpm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feePpmPerTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minUnitPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePpm\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newFeePpm\",\"type\":\"uint256\"}],\"name\":\"setFeePpmForTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minUnit\",\"type\":\"uint256\"}],\"name\":\"setMinUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setTokenWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedSeq\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\n\nexport const ERC2771_FORWARDER_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\n\n\nexport const erc2771ForwarderAddress = '0xC109B607A2228FF55b6341F0b926b3aE7FDe964c' as `0x${string}`;\nexport const EIP712_DOMAIN_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\" as `0x${string}`);\nexport const FORWARD_REQUEST_TYPEHASH = keccak256(\n  \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\" as `0x${string}`\n);\n\nexport const EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' }\n]\n\nexport const FORWARD_REQUEST_TYPES = {\n  ForwardRequest: [\n    { name: 'from', type: 'address' },\n    { name: 'to', type: 'address' },\n    { name: 'value', type: 'uint256' },\n    { name: 'gas', type: 'uint256' },\n    { name: 'nonce', type: 'uint256' },\n    { name: 'deadline', type: 'uint48' },\n    { name: 'data', type: 'bytes' }\n  ]\n}\n\nexport const contract7702Address = '0x38e424b5310DCB25c0eae5bc58D412D0eF699a7f' as `0x${string}`;\nexport const erc20Address = '0x540126734dee9B0e623c71c2a9ED44Ef4387A81F' as `0x${string}`;\n\nexport const contract7702Abi = [\n  {\n    \"inputs\": [],\n    \"name\": \"nonce\",\n    \"outputs\": [{\"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\"type\": \"bytes\", \"name\": \"data\"},\n          {\"type\": \"address\", \"name\": \"to\"},\n          {\"type\": \"uint256\", \"name\": \"value\"}\n        ],\n        \"type\": \"tuple[]\"\n      },\n      {\"type\": \"bytes\", \"name\": \"signature\"}\n    ],\n    \"name\": \"executeSponsor\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n] as const;\n\nexport const ERC20_ABI = [\n  {\n    \"inputs\": [\n      {\"type\": \"address\", \"name\": \"to\"},\n      {\"type\": \"uint256\", \"name\": \"amount\"}\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [{\"type\": \"bool\"}],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"type\": \"address\", \"name\": \"owner\"},\n      {\"type\": \"address\", \"name\": \"spender\"}\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [{\"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"type\": \"address\", \"name\": \"spender\"},\n      {\"type\": \"uint256\", \"name\": \"amount\"}\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [{\"type\": \"bool\"}],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{\"type\": \"address\", \"name\": \"account\"}],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n] as const; ","import { \n  createWalletClient, \n  createPublicClient, \n  http,\n  custom,\n  type WalletClient,\n  type PublicClient,\n  type Account,\n  type Address\n} from 'viem';\nimport { DelegateConfig } from '../types';\n\n// 检查是否在浏览器环境中\nconst isBrowser = typeof window !== 'undefined';\n\n// 安全地访问window.ethereum\nconst getEthereum = () => {\n  if (!isBrowser) {\n    return null;\n  }\n  return window.ethereum;\n};\n\n// 检查是否有任何可用的钱包提供者\nconst getAnyWalletProvider = () => {\n  if (!isBrowser) {\n    return null;\n  }\n  \n  // 检查各种钱包提供者\n  return window.ethereum || \n         window.walletLinkExtension || \n         window.walletConnect || \n         window.coinbaseWalletExtension ||\n         null;\n};\n\nexport class WalletService {\n  protected wallet?: WalletClient;\n  protected publicClient?: PublicClient;\n  protected config: DelegateConfig;\n  protected account?: Account;\n  protected chainId?: number;\n\n  constructor(config: DelegateConfig) {\n    this.config = config;\n  }\n\n  /**\n   * 初始化客户端\n   * @returns 是否初始化成功\n   */\n  protected async initializeClients(): Promise<boolean> {\n    console.log('开始初始化钱包客户端...');\n    \n    if (this.config.useMetaMask) {\n      console.log('尝试使用钱包...');\n      \n      // 检查是否在浏览器环境\n      if (!isBrowser) {\n        throw new Error('钱包只能在浏览器环境中使用');\n      }\n\n      // 尝试获取任何可用的钱包提供者\n      const provider = getAnyWalletProvider();\n      if (!provider) {\n        console.error('未检测到可用的钱包');\n        throw new Error('未检测到可用的钱包。请安装MetaMask、Coinbase Wallet或其他以太坊钱包。');\n      }\n    \n      console.log('检测到钱包提供者，创建钱包客户端...');\n      \n      try {\n        // 获取当前链ID\n        const chainIdHex = await provider.request({ method: 'eth_chainId' });\n        this.chainId = parseInt(chainIdHex as string, 16);\n        console.log('从钱包获取到链 ID:', this.chainId);\n        \n        // 使用检测到的钱包\n        this.wallet = createWalletClient({\n          transport: custom(provider)\n        });\n        \n        console.log('钱包客户端创建完成');\n        \n        // 创建公共客户端\n        this.publicClient = createPublicClient({\n          transport: custom(provider)\n        });\n        \n        console.log('公共客户端创建完成');\n        return true;\n      } catch (error: any) {\n        console.error('初始化客户端失败:', error);\n        console.error('错误详情:', {\n          message: error.message,\n          code: error.code,\n          data: error.data\n        });\n        throw new Error(`初始化客户端失败: ${error.message}`);\n      }\n    } else {\n      console.warn('需要使用浏览器钱包，请设置 useMetaMask 为 true');\n      throw new Error('需要使用浏览器钱包');\n    }\n  }\n\n  /**\n   * 连接钱包\n   * @returns 连接的地址\n   */\n  async connectWallet(): Promise<string> {\n    if (!this.config.useMetaMask) {\n      throw new Error('需要使用浏览器钱包');\n    }\n\n    // 确保客户端已初始化\n    if (!this.wallet || !this.publicClient) {\n      await this.initializeClients();\n    }\n\n    try {\n      console.log('请求连接钱包...');\n      const [address] = await this.wallet!.requestAddresses();\n      console.log('获取到钱包地址:', address);\n      \n      // 创建账户对象\n      this.account = {\n        address,\n        type: 'json-rpc'\n      };\n      \n      return address;\n    } catch (error: any) {\n      console.error('连接钱包失败:', error);\n      throw new Error(`连接钱包失败: ${error.message}`);\n    }\n  }\n\n  /**\n   * 检查是否已连接钱包\n   * @returns 是否已连接\n   */\n  isConnected(): boolean {\n    return !!this.account;\n  }\n\n  /**\n   * 获取当前连接的地址\n   * @returns 连接的地址\n   */\n  getConnectedAddress(): string | undefined {\n    return this.account?.address;\n  }\n\n  /**\n   * 获取当前连接的链ID\n   * @returns 链ID\n   */\n  getChainId(): number | undefined {\n    return this.chainId;\n  }\n\n  /**\n   * 获取钱包客户端\n   * @returns 钱包客户端\n   */\n  getWallet(): WalletClient | undefined {\n    return this.wallet;\n  }\n\n  /**\n   * 获取公共客户端\n   * @returns 公共客户端\n   */\n  getPublicClient(): PublicClient | undefined {\n    return this.publicClient;\n  }\n\n  /**\n   * 获取当前账户\n   * @returns 账户\n   */\n  getAccount(): Account | undefined {\n    return this.account;\n  }\n\n  /**\n   * 确保钱包已连接，如果未连接则尝试连接\n   * @returns 是否已连接\n   */\n  async ensureConnected(): Promise<boolean> {\n    if (!this.isConnected()) {\n      await this.connectWallet();\n    }\n    return this.isConnected();\n  }\n\n  /**\n   * 确保客户端已初始化，如果未初始化则尝试初始化\n   * @returns 是否已初始化\n   */\n  async ensureInitialized(): Promise<boolean> {\n    if (!this.publicClient || !this.wallet) {\n      await this.initializeClients();\n    }\n    return !!this.publicClient && !!this.wallet;\n  }\n} ","import { \n  type Hash,\n  type Address,\n  createPublicClient,\n  http\n} from 'viem';\nimport { ERC20_ABI, erc2771ForwarderAddress, paymentContractAddress, UnifiedVaultContractAddress, UNIFIED_VAULT_ABI, ERC2771_FORWARDER_ABI } from '../config/contract';\nimport { WalletService } from './wallet-service';\nimport { DelegateConfig } from '../types';\n\n// 自定义 RPC URL\nconst RPC_URL = 'http://192.168.6.233:8545';\n\nexport interface BlockchainConfig {\n  useMetaMask?: boolean;\n  contractAddress?: string;\n  publicKey?: string;\n  consumeContractAddress?: string;\n  forwarderAddress?: string;\n  rpcUrl?: string; // 添加自定义 RPC URL 配置\n}\n\nexport class BlockchainService extends WalletService {\n  private customRpcClient: any; // 自定义 RPC 客户端\n\n  constructor(config: BlockchainConfig = { useMetaMask: true }) {\n    // 转换为 DelegateConfig\n    const delegateConfig: DelegateConfig = {\n      useMetaMask: config.useMetaMask,\n      contractAddress: config.contractAddress || paymentContractAddress,\n      publicKey: config.publicKey || '',\n      consumeContractAddress: config.consumeContractAddress,\n      forwarderAddress: config.forwarderAddress\n    };\n    \n    super(delegateConfig);\n    \n    // 初始化自定义 RPC 客户端\n    this.customRpcClient = createPublicClient({\n      transport: http(config.rpcUrl || RPC_URL)\n    });\n  }\n\n  // 获取钱包客户端\n  getWalletClient() {\n    return this.wallet;\n  }\n\n  // 获取账户\n  getAccount() {\n    return this.account;\n  }\n\n  // 检查钱包状态\n  async ensureWalletConnected(): Promise<void> {\n    await this.ensureConnected();\n  }\n\n  // 检查并确保代币授权\n  async ensureTokenAllowance(tokenAddress: string, spender: string, amount: bigint): Promise<boolean> {\n    await this.ensureWalletConnected();\n\n    // 查询当前allowance - 使用自定义 RPC 客户端\n    const currentAllowance: bigint = await this.readContract<bigint>(\n      tokenAddress,\n      ERC20_ABI,\n      'allowance',\n      [this.account!.address as `0x${string}`, spender as `0x${string}`]\n    );\n\n    console.log(`当前allowance: ${currentAllowance} 需要: ${amount}`);\n    if (currentAllowance >= amount) {\n      console.log('授权额度充足');\n      return true; // 不需要approve\n    }\n\n    // 额度不足，自动请求用户 approve\n    console.log('授权额度不足，发起approve...');\n\n    const approveHash = await this.writeContract(\n      tokenAddress,\n      ERC20_ABI,\n      'approve',\n      [spender as `0x${string}`, amount]\n    );\n\n    console.log('approve成功');\n    return true;\n  }\n\n  // 获取Nonce\n  async getNonce(address: string, options?: { timeout?: number }): Promise<bigint> {\n    try {\n      const nonce = await this.readContract<bigint>(\n        erc2771ForwarderAddress,\n        ERC2771_FORWARDER_ABI,\n        'nonces',\n        [address as `0x${string}`],\n        options\n      );\n      \n      return nonce;\n    } catch (error) {\n      // 这里不吞掉错误，直接抛出\n      throw error;\n    }\n  }\n  \n  // 发送交易\n  async sendTransaction(to: string, value: bigint, data?: `0x${string}`): Promise<Hash> {\n    await this.ensureWalletConnected();\n    \n    console.log('发送交易...');\n    console.log('- 发送方:', this.account!.address);\n    console.log('- 接收方:', to);\n    console.log('- 金额:', value.toString());\n    \n    // 构建交易对象\n    const transaction = {\n      account: this.account!,\n      chain: this.chainId ? { id: this.chainId } as any : undefined,\n      to: to as `0x${string}`,\n      value,\n      data\n    };\n    \n    try {\n      // 发送交易\n      const hash = await this.wallet!.sendTransaction(transaction);\n      console.log('交易已发送，等待确认，哈希:', hash);\n      \n      // 等待交易确认\n      const receipt = await this.publicClient!.waitForTransactionReceipt({ hash });\n      \n      if (receipt.status !== 'success') {\n        throw new Error('交易执行失败');\n      }\n      \n      console.log('交易已确认');\n      return hash;\n    } catch (error: any) {\n      console.error('发送交易失败:', error);\n      throw new Error(`发送交易失败: ${error.message}`);\n    }\n  }\n  \n  // 调用合约写方法\n  async writeContract(\n    address: string, \n    abi: any, \n    functionName: string, \n    args: any[],\n    value: bigint = 0n\n  ): Promise<Hash> {\n    await this.ensureWalletConnected();\n    \n    console.log('调用合约写方法...');\n    console.log('- 合约地址:', address);\n    console.log('- 函数名:', functionName);\n    console.log('- 参数:', args);\n    \n    try {\n      // 调用合约\n      const hash = await this.wallet!.writeContract({\n        account: this.account!,\n        chain: this.chainId ? { id: this.chainId } as any : undefined,\n        address: address as `0x${string}`,\n        abi,\n        functionName,\n        args,\n        value\n      });\n      \n      console.log('合约调用已发送，等待确认，哈希:', hash);\n      \n      // 等待交易确认\n      const receipt = await this.publicClient!.waitForTransactionReceipt({ hash });\n      \n      if (receipt.status !== 'success') {\n        throw new Error('合约调用执行失败');\n      }\n      \n      console.log('合约调用已确认');\n      return hash;\n    } catch (error: any) {\n      console.error('调用合约写方法失败:', error);\n      throw new Error(`调用合约写方法失败: ${error.message}`);\n    }\n  }\n  \n  // 调用合约读方法 - 使用自定义 RPC 客户端而不是钱包\n  async readContract<T = any>(\n    address: string,\n    abi: any,\n    functionName: string,\n    args: any[] = [],\n    options?: { timeout?: number }\n  ): Promise<T> {\n    // 不需要确保钱包已初始化，直接使用自定义 RPC 客户端\n    const timeout = options?.timeout ?? 10000; // 默认10秒\n    \n    console.log('调用合约读方法...');\n    console.log('- 合约地址:', address);\n    console.log('- 函数名:', functionName);\n    console.log('- 参数:', args);\n    \n    try {\n      // 带超时的合约调用 - 使用自定义 RPC 客户端\n      const result = await Promise.race([\n        this.customRpcClient.readContract({\n          address: address as `0x${string}`,\n          abi,\n          functionName,\n          args\n        }) as Promise<T>,\n        new Promise<never>((_, reject) => \n          setTimeout(() => reject(new Error('TimeoutError: readContract timeout')), timeout)\n        )\n      ]);\n      \n      console.log('合约读取结果:', result);\n      return result;\n    } catch (error: any) {\n      console.error('调用合约读方法失败:', error);\n      throw new Error(`调用合约读方法失败: ${error.message}`);\n    }\n  }\n} ","import { \n  type Address,\n  type Account,\n  type Hash,\n  stringToHex,\n  pad\n} from 'viem';\nimport { keccak256, encodePacked } from 'viem';\nimport { DelegateConfig, MerchantOperationResult, MerchantConfig } from '../types';\nimport { UnifiedVaultContractAddress, UNIFIED_VAULT_ABI } from '../config/contract';\nimport { BlockchainService } from './blockchain';\n\nexport class MerchantManager extends BlockchainService {\n  private contractAddress: string;\n\n  constructor(config: DelegateConfig) {\n    super(config);\n    this.contractAddress = config.contractAddress;\n  }\n\n  /**\n   * 生成商户ID\n   * @param merchantName 商户名称或标识符\n   * @returns 32字节的商户ID\n   */\n  generateMerchantId(merchantName: string): string {\n    if (!merchantName || merchantName.trim() === '') {\n      throw new Error('商户名称不能为空');\n    }\n    \n    // 将字符串转换为十六进制\n    const merchantIdHex = stringToHex(merchantName);\n    \n    // 确保是bytes32（32字节，64个十六进制字符加上0x前缀）\n    const merchantId = pad(merchantIdHex, { size: 32 });\n    \n    console.log('生成的merchantId:', merchantId);\n    return merchantId;\n  }\n\n  /**\n   * 检查操作员权限\n   * @param merchantId 商户ID\n   * @param operator 操作员地址\n   * @returns 是否有权限\n   */\n  async checkOperatorPermission(merchantId: string, operator: string): Promise<MerchantOperationResult> {\n    try {\n      // 确保客户端已初始化\n      await this.ensureWalletConnected();\n\n      console.log('检查操作员权限...');\n      console.log('- 商户ID:', merchantId);\n      console.log('- 操作员:', operator);\n      \n      // 调用合约方法\n      const hasPermission = await this.readContract<boolean>(\n        this.contractAddress,\n        UNIFIED_VAULT_ABI,\n        'merchantOperator',\n        [operator as `0x${string}`, merchantId]\n      );\n      \n      return {\n        success: true,\n        message: hasPermission ? '操作员有权限' : '操作员无权限',\n        data: hasPermission\n      };\n    } catch (error: any) {\n      console.error('检查操作员权限失败:', error);\n      return {\n        success: false,\n        message: `检查操作员权限失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 添加操作员权限\n   * @param merchantId 商户ID\n   * @param operator 操作员地址\n   * @returns 操作结果\n   */\n  async addOperator(merchantId: string, operator: string): Promise<MerchantOperationResult> {\n    try {\n      // 确保钱包已连接\n      await this.ensureWalletConnected();\n\n      console.log('添加操作员...');\n      console.log('- 商户ID:', merchantId);\n      console.log('- 操作员:', operator);\n      \n      // 调用合约方法 setMerchantOperator\n      const txHash = await this.writeContract(\n        this.contractAddress,\n        UNIFIED_VAULT_ABI,\n        'setMerchantOperator',\n        [\n          operator as `0x${string}`,\n          merchantId,\n          true\n        ]\n      );\n      \n      console.log('交易已发送，哈希:', txHash);\n      \n      return {\n        success: true,\n        message: '添加操作员交易已发送',\n        data: { txHash }\n      };\n    } catch (error: any) {\n      console.error('添加操作员失败:', error);\n      return {\n        success: false,\n        message: `添加操作员失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 检查商家收款地址\n   * @param merchantId 商户ID\n   * @returns 收款地址\n   */\n  async checkMerchantAddress(merchantId: string): Promise<MerchantOperationResult> {\n    try {\n      // 确保客户端已初始化\n      await this.ensureWalletConnected();\n\n      console.log('检查商家收款地址...');\n      console.log('- 商户ID:', merchantId);\n      \n      // 调用合约方法\n      const address = await this.readContract<string>(\n        this.contractAddress,\n        UNIFIED_VAULT_ABI,\n        'merchantRecipients',\n        [merchantId]\n      );\n      \n      // 检查地址是否为零地址\n      if (address === '0x0000000000000000000000000000000000000000') {\n        return {\n          success: false,\n          message: '商家收款地址未设置',\n          data: null\n        };\n      }\n      \n      return {\n        success: true,\n        message: '获取到商家收款地址',\n        data: address\n      };\n    } catch (error: any) {\n      console.error('检查商家收款地址失败:', error);\n      return {\n        success: false,\n        message: `检查商家收款地址失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 设置商家收款地址\n   * @param merchantId 商户ID\n   * @param address 收款地址\n   * @returns 操作结果\n   */\n  async setMerchantAddress(merchantId: string, address: string): Promise<MerchantOperationResult> {\n    try {\n      // 确保钱包已连接\n      await this.ensureWalletConnected();\n\n      console.log('设置商家收款地址...');\n      console.log('- 商户ID:', merchantId);\n      console.log('- 收款地址:', address);\n      \n      // 调用合约方法\n      const txHash = await this.writeContract(\n        this.contractAddress,\n        UNIFIED_VAULT_ABI,\n        'setMerchantRecipient',\n        [merchantId, address as `0x${string}`]\n      );\n      \n      console.log('交易已发送，哈希:', txHash);\n      \n      return {\n        success: true,\n        message: '设置商家收款地址交易已发送',\n        data: { txHash }\n      };\n    } catch (error: any) {\n      console.error('设置商家收款地址失败:', error);\n      return {\n        success: false,\n        message: `设置商家收款地址失败: ${error.message}`\n      };\n    }\n  }\n} ","import { \n  type Account,\n  type Address\n} from 'viem';\nimport { DelegateConfig, MerchantOperationResult, MerchantContractConfig, PromoTier } from '../types';\nimport { UnifiedVaultContractAddress, UNIFIED_VAULT_ABI } from '../config/contract';\nimport { BlockchainService } from './blockchain';\n\nexport class MerchantConfigManager extends BlockchainService {\n  private contractAddress: string;\n\n  constructor(config: DelegateConfig) {\n    super(config);\n    this.contractAddress = config.contractAddress;\n  }\n\n  /**\n   * 创建商家配置\n   * @param merchantId 商户ID\n   * @param config 商户配置数据\n   * @returns 创建结果\n   */\n  async createMerchantConfig(\n    merchantId: string, \n    config: MerchantContractConfig\n  ): Promise<MerchantOperationResult> {\n    try {\n      // 确保钱包已连接\n      await this.ensureWalletConnected();\n\n      console.log('设置商户配置...');\n      console.log('- 商户ID:', merchantId);\n      console.log('- 促销分档启用:', config.promoTiersEnabled);\n      console.log('- 促销分档数量:', config.promoTiers.length);\n      console.log('- 折扣启用:', config.discountEnabled);\n      console.log('- 返积分启用:', config.cashbackPointEnabled);\n      console.log('- 返券启用:', config.cashbackVoucherEnabled);\n      \n      // 调用合约方法\n      const txHash = await this.writeContract(\n        this.contractAddress,\n        UNIFIED_VAULT_ABI,\n        'setMerchantConfig',\n        [merchantId, config]\n      );\n      \n      console.log('交易已发送，哈希:', txHash);\n      \n      return {\n        success: true,\n        message: '设置商户配置交易已发送',\n        data: { txHash }\n      };\n    } catch (error: any) {\n      console.error('设置商户配置失败:', error);\n      return {\n        success: false,\n        message: `设置商户配置失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 获取商户配置\n   * @param merchantId 商户ID\n   * @returns 商户配置\n   */\n  async getMerchantConfig(merchantId: string): Promise<MerchantOperationResult> {\n    try {\n      // 确保客户端已初始化\n      await this.ensureWalletConnected();\n\n      console.log('获取商户配置...');\n      console.log('- 商户ID:', merchantId);\n      \n      // 使用合约中新增的 getMerchantConfig 函数获取商户配置\n      const config = await this.readContract<any>(\n        this.contractAddress,\n        UNIFIED_VAULT_ABI,\n        'getMerchantConfig',\n        [merchantId]\n      );\n      \n      console.log('获取到的商户配置原始数据:', config);\n      \n      // 检查 config 是否存在\n      if (!config) {\n        throw new Error(`商户 ${merchantId} 不存在或未配置`);\n      }\n      \n      // 使用合约中新增的 getMerchantPromoTiers 函数获取促销分档数据\n      let promoTiers: any[] = [];\n      try {\n        promoTiers = await this.readContract<any[]>(\n          this.contractAddress,\n          UNIFIED_VAULT_ABI,\n          'getMerchantPromoTiers',\n          [merchantId]\n        );\n        console.log('获取到的促销分档数据:', promoTiers);\n      } catch (error) {\n        console.warn('获取促销分档失败，使用空数组:', error);\n      }\n      \n      // 将合约返回的数据转换为MerchantContractConfig类型，并提供默认值\n      const discountBase = config.discountBase !== undefined ? config.discountBase : 0n;\n      const discountRate = config.discountRate !== undefined ? config.discountRate : 100n;\n      const cashbackPointBase = config.cashbackPointBase !== undefined ? config.cashbackPointBase : 0n;\n      const cashbackPointAmount = config.cashbackPointAmount !== undefined ? config.cashbackPointAmount : 0n;\n      const cashbackVoucherBase = config.cashbackVoucherBase !== undefined ? config.cashbackVoucherBase : 0n;\n      const cashbackVoucherAmount = config.cashbackVoucherAmount !== undefined ? config.cashbackVoucherAmount : 0n;\n      const voucherExpirePeriod = config.voucherExpirePeriod !== undefined ? config.voucherExpirePeriod : 0n;\n      \n      // 处理 promoTiers 数组，转换其中的 BigInt 值为字符串\n      const processedPromoTiers = Array.isArray(promoTiers) \n        ? promoTiers.map((tier: any) => ({\n            minAmount: tier.minAmount ? tier.minAmount.toString() : '0',\n            discountRate: tier.discountRate ? tier.discountRate.toString() : '100',\n            voucherAmount: tier.voucherAmount ? tier.voucherAmount.toString() : '0',\n            pointAmount: tier.pointAmount ? tier.pointAmount.toString() : '0'\n          }))\n        : [];\n      \n      // 将所有 BigInt 转换为字符串\n      const merchantConfig = {\n        promoTiersEnabled: config.promoTiersEnabled || false,\n        promoTiers: processedPromoTiers,\n        discountEnabled: config.discountEnabled || false,\n        discountBase: discountBase.toString(),\n        discountRate: discountRate.toString(),\n        cashbackPointEnabled: config.cashbackPointEnabled || false,\n        cashbackPointBase: cashbackPointBase.toString(),\n        cashbackPointAmount: cashbackPointAmount.toString(),\n        cashbackVoucherEnabled: config.cashbackVoucherEnabled || false,\n        cashbackVoucherBase: cashbackVoucherBase.toString(),\n        cashbackVoucherAmount: cashbackVoucherAmount.toString(),\n        voucherExpirePeriod: voucherExpirePeriod.toString()\n      };\n      \n      console.log('处理后的商户配置数据(字符串化):', merchantConfig);\n      \n      return {\n        success: true,\n        message: '获取商户配置成功',\n        data: merchantConfig\n      };\n    } catch (error: any) {\n      console.error('获取商户配置失败:', error);\n      return {\n        success: false,\n        message: `获取商户配置失败: ${error.message}`\n      };\n    }\n  }\n} ","export interface DelegateConfig {\n  contractAddress: string;\n  publicKey: string;\n  useMetaMask?: boolean;\n  consumeContractAddress?: string; // 消费合约地址\n  forwarderAddress?: string; // 转发合约地址\n}\n\nexport interface TransferParams {\n  to: string;\n  amount: bigint;\n  tokenAddress?: string;\n  gasFee?: bigint;\n  seq?: bigint;\n  contractAddress?: string;\n  payer?: string;\n}\n\nexport interface ProcessResult {\n  request: {\n    from: string;     // address\n    to: string;       // address\n    value: string;    // uint256\n    gas: string;      // uint256\n    nonce: string;    // uint256\n    deadline: string; // uint48\n    data: string;     // bytes\n    signature?: string; // bytes - 签名\n  };\n}\n\nexport interface EncryptionResult {\n  encryptedKey: string;\n  encryptedData: string;\n  iv: string;\n}\n\nexport interface Call {\n  data: `0x${string}`;\n  to: string;\n  value: bigint;\n}\n\n// 促销分档配置\nexport interface PromoTier {\n  minAmount: bigint;       // 最低消费金额\n  discountRate: bigint;    // 折扣率（百分制，100=无折扣）\n  voucherAmount: bigint;   // 返券金额\n  pointAmount: bigint;     // 返积分数量\n}\n\n// 合约中的商户配置结构\nexport interface MerchantContractConfig {\n  promoTiersEnabled: boolean;       // 是否启用促销分档\n  promoTiers: PromoTier[];          // 促销分档配置\n  discountEnabled: boolean;         // 是否启用普通折扣\n  discountBase: bigint;             // 折扣基准金额\n  discountRate: bigint;             // 折扣率（百分制）\n  cashbackPointEnabled: boolean;    // 是否启用返积分\n  cashbackPointBase: bigint;        // 返积分基准金额\n  cashbackPointAmount: bigint;      // 返积分数量\n  cashbackVoucherEnabled: boolean;  // 是否启用返券\n  cashbackVoucherBase: bigint;      // 返券基准金额\n  cashbackVoucherAmount: bigint;    // 返券金额\n  voucherExpirePeriod: bigint;      // 券的有效期（秒）\n}\n\n// 新增商户配置接口\nexport interface MerchantConfig {\n  id: string;               // 商户ID\n  name: string;             // 商户名称\n  owner: string;            // 商户所有者地址\n  operators: string[];      // 操作员地址列表\n  paymentAddress: string;   // 收款地址\n  active: boolean;          // 是否激活\n  feePpm?: number;          // 商户特定手续费率(百万分之)\n  createdAt: number;        // 创建时间戳\n  updatedAt: number;        // 更新时间戳\n  maxAmount?: bigint;       // 最大交易金额\n  minAmount?: bigint;       // 最小交易金额\n  whitelistedTokens?: string[]; // 白名单代币列表\n}\n\n// 操作类型枚举\nexport enum OperationType {\n  Payment = 'payment',      // 支付操作\n  Consume = 'consume',      // 消费操作\n  Deposit = 'deposit',      // 存款操作\n  Withdraw = 'withdraw'     // 提款操作\n}\n\n// 中继请求接口\nexport interface RelayerRequest {\n  from: string;             // 发送方地址\n  to: string;               // 接收方地址\n  token: string;            // 代币地址\n  amount: bigint;           // 金额\n  seq: bigint;              // 序列号\n  gasFee?: bigint;          // Gas费用(可选)\n  consumerId?: string;      // 消费者ID(消费时需要)\n  merchantId?: string;      // 商户ID\n  voucherId?: bigint;       // 代金券ID(代金券消费时需要)\n  pointToUse?: bigint;      // 使用的积分(代金券消费时需要)\n  signature: string;        // 签名\n  deadline: number;         // 截止时间\n  data?: `0x${string}`;     // 调用数据\n  value?: string;           // 原生代币值\n  gas?: string;             // Gas限制\n}\n\n// 验证结果接口\nexport interface ValidationResult {\n  success: boolean;         // 是否验证成功\n  error?: string;           // 错误信息\n  fee?: bigint;             // 手续费\n  toAmount?: bigint;        // 接收方到账金额\n  rewardAmount?: bigint;    // 奖励金额(消费时)\n  merchantAmount?: bigint;  // 商家到账金额(代金券消费时)\n  voucherReward?: bigint;   // 返券金额\n  discountedAmount?: bigint; // 折扣后金额\n  pointsUsed?: bigint;      // 使用的积分\n  voucherUsed?: bigint;     // 使用的代金券金额\n  spendAmount?: bigint;     // 实际扣除金额\n}\n\n// 商户管理员操作结果\nexport interface MerchantOperationResult {\n  success: boolean;         // 操作是否成功\n  message: string;          // 结果消息\n  data?: any;               // 返回数据\n} ","import { \n  type Account,\n  type Address,\n  encodeFunctionData,\n  decodeFunctionData\n} from 'viem';\nimport { DelegateConfig, RelayerRequest, OperationType, ValidationResult } from '../types';\nimport { BlockchainService } from './blockchain';\nimport { \n  PAYMENT_CONTRACT_ABI, \n  ERC2771_FORWARDER_ABI,\n  ERC20_ABI,\n  paymentContractAddress,\n  erc2771ForwarderAddress,\n  UNIFIED_VAULT_ABI,\n  UnifiedVaultContractAddress\n} from '../config/contract';\n\n// 新的简化请求接口\nexport interface SimpleRelayerRequest {\n  from: string;           // 发送方地址\n  to: string;             // 目标合约地址\n  value: string;          // 原生代币值\n  gas: string;            // Gas限制\n  deadline: string;       // 截止时间\n  data: string;           // 调用数据\n  signature: string;      // 签名\n}\n\nexport class RelayerService extends BlockchainService {\n  private paymentContractAddress: string;\n  private consumeContractAddress: string;\n  private forwarderAddress: string;\n\n  constructor(config: DelegateConfig) {\n    super(config);\n    this.paymentContractAddress = config.contractAddress || paymentContractAddress;\n    this.consumeContractAddress = config.consumeContractAddress || config.contractAddress || UnifiedVaultContractAddress;\n    this.forwarderAddress = config.forwarderAddress || erc2771ForwarderAddress;\n  }\n\n  /**\n   * 验证支付请求\n   * @param params 请求参数\n   * @returns 验证结果\n   */\n  async validatePaymentRequest(params: {\n    token: string,\n    to: string,\n    amount: bigint,\n    gasFee: bigint,\n    seq: bigint,\n    from: string\n  }): Promise<ValidationResult> {\n    try {\n      // 确保客户端已初始化\n      await this.ensureWalletConnected();\n      \n      const { token, to, amount, gasFee, seq, from } = params;\n      \n      console.log('验证支付请求...');\n      console.log('- 代币:', token);\n      console.log('- 接收方:', to);\n      console.log('- 金额:', amount.toString());\n      console.log('- Gas费:', gasFee.toString());\n      console.log('- 序列号:', seq.toString());\n      console.log('- 发送方:', from);\n      \n      // 检查金额是否大于0\n      if (amount <= 0n) {\n        console.error('金额必须大于0');\n        return {\n          success: false,\n          error: '金额必须大于0'\n        };\n      }\n      \n      // 1. 检查序列号是否已使用\n      try {\n        const isUsed = await this.readContract<boolean>(\n          this.paymentContractAddress,\n          PAYMENT_CONTRACT_ABI,\n          'usedSeq',\n          [seq]\n        );\n        \n        if (isUsed) {\n          console.error('序列号已被使用');\n          return {\n            success: false,\n            error: '序列号已被使用'\n          };\n        }\n      } catch (error: any) {\n        console.error('检查序列号失败:', error);\n        return {\n          success: false,\n          error: `检查序列号失败: ${error.message}`\n        };\n      }\n      \n      // 2. 检查代币是否在白名单中\n      try {\n        const isWhitelisted = await this.readContract<boolean>(\n          this.paymentContractAddress,\n          PAYMENT_CONTRACT_ABI,\n          'tokenWhitelist',\n          [token as `0x${string}`]\n        );\n        \n        if (!isWhitelisted) {\n          console.error('代币不在白名单中');\n          return {\n            success: false,\n            error: '代币不在白名单中'\n          };\n        }\n      } catch (error: any) {\n        console.error('检查代币白名单失败:', error);\n        return {\n          success: false,\n          error: `检查代币白名单失败: ${error.message}`\n        };\n      }\n      \n      // 3. 检查金额是否超过最大限制\n      try {\n        const maxAmount = await this.readContract<bigint>(\n          this.paymentContractAddress,\n          PAYMENT_CONTRACT_ABI,\n          'MAX_AMOUNT',\n          []\n        );\n        \n        if (amount > maxAmount) {\n          console.error('金额超过最大限制');\n          return {\n            success: false,\n            error: `金额超过最大限制: ${maxAmount}`\n          };\n        }\n      } catch (error: any) {\n        console.error('检查最大金额限制失败:', error);\n        return {\n          success: false,\n          error: `检查最大金额限制失败: ${error.message}`\n        };\n      }\n      \n      // 4. 检查手续费地址是否设置\n      try {\n        const feeAddress = await this.readContract<string>(\n          this.paymentContractAddress,\n          PAYMENT_CONTRACT_ABI,\n          'feeAddress',\n          []\n        );\n        \n        if (feeAddress === '0x0000000000000000000000000000000000000000') {\n          console.error('手续费地址未设置');\n          return {\n            success: false,\n            error: '手续费地址未设置'\n          };\n        }\n      } catch (error: any) {\n        console.error('检查手续费地址失败:', error);\n        return {\n          success: false,\n          error: `检查手续费地址失败: ${error.message}`\n        };\n      }\n      \n      // 5. 检查最小单位\n      let minUnit: bigint;\n      try {\n        minUnit = await this.readContract<bigint>(\n          this.paymentContractAddress,\n          PAYMENT_CONTRACT_ABI,\n          'minUnitPerToken',\n          [token as `0x${string}`]\n        );\n        \n        if (minUnit <= 0n) {\n          console.error('代币最小单位未设置');\n          return {\n            success: false,\n            error: '代币最小单位未设置'\n          };\n        }\n        \n        if (amount < minUnit) {\n          console.error('金额低于最小单位');\n          return {\n            success: false,\n            error: `金额低于最小单位: ${minUnit}`\n          };\n        }\n        \n        // 检查金额是否是最小单位的整数倍\n        if (amount % minUnit !== 0n) {\n          console.error('金额必须是最小单位的整数倍');\n          return {\n            success: false,\n            error: `金额必须是最小单位的整数倍: ${minUnit}`\n          };\n        }\n      } catch (error: any) {\n        console.error('检查最小单位失败:', error);\n        return {\n          success: false,\n          error: `检查最小单位失败: ${error.message}`\n        };\n      }\n      \n      // 6. 计算手续费\n      let feePpm: bigint;\n      try {\n        // 首先检查是否有特定接收方的费率\n        const specificFeePpm = await this.readContract<bigint>(\n          this.paymentContractAddress,\n          PAYMENT_CONTRACT_ABI,\n          'feePpmPerTo',\n          [to as `0x${string}`]\n        );\n        \n        if (specificFeePpm > 0n) {\n          feePpm = specificFeePpm;\n        } else {\n          // 使用默认费率\n          feePpm = await this.readContract<bigint>(\n            this.paymentContractAddress,\n            PAYMENT_CONTRACT_ABI,\n            'feePpm',\n            []\n          );\n        }\n        \n        // 检查费率是否有效\n        if (feePpm >= 1000000n) {\n          console.error('费率无效');\n          return {\n            success: false,\n            error: '费率无效'\n          };\n        }\n      } catch (error: any) {\n        console.error('获取手续费率失败:', error);\n        return {\n          success: false,\n          error: `获取手续费率失败: ${error.message}`\n        };\n      }\n      \n      // 计算手续费和实际到账金额\n      const fee = (amount * feePpm) / 1000000n;\n      \n      // 检查手续费是否小于金额\n      if (fee >= amount) {\n        console.error('手续费过高');\n        return {\n          success: false,\n          error: '手续费过高'\n        };\n      }\n      \n      const toAmount = amount - fee;\n      \n      // 检查接收方到账金额是否大于0\n      if (toAmount <= 0n) {\n        console.error('接收方到账金额过低');\n        return {\n          success: false,\n          error: '接收方到账金额过低'\n        };\n      }\n      \n      console.log('验证通过');\n      console.log('- 手续费率:', feePpm.toString(), 'ppm');\n      console.log('- 手续费:', fee.toString());\n      console.log('- 实际到账:', toAmount.toString());\n      \n      return {\n        success: true,\n        fee,\n        toAmount\n      };\n    } catch (error: any) {\n      console.error('验证支付请求失败:', error);\n      return {\n        success: false,\n        error: `验证支付请求失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 验证消费请求\n   * @param params 请求参数\n   * @returns 验证结果\n   */\n  async validateConsumeRequest(params: {\n    token: string,\n    merchantId: string,\n    amount: bigint,\n    seq: bigint,\n    from: string,\n    voucherId?: bigint,\n    pointToUse?: bigint\n  }): Promise<ValidationResult> {\n    try {\n      // 确保客户端已初始化\n      await this.ensureWalletConnected();\n      \n      const { token, merchantId, amount, seq, from, voucherId = 0n, pointToUse = 0n } = params;\n      \n      console.log('验证消费请求...');\n      console.log('- 商家ID:', merchantId);\n      console.log('- 代币:', token);\n      console.log('- 金额:', amount.toString());\n      console.log('- 序列号:', seq.toString());\n      console.log('- 发送方:', from);\n      \n      if (voucherId > 0n) {\n        console.log('- 代金券ID:', voucherId.toString());\n      }\n      \n      if (pointToUse > 0n) {\n        console.log('- 使用积分:', pointToUse.toString());\n      }\n      \n      // 1. 验证商家是否设置\n      let merchantRecipient: string;\n      try {\n        merchantRecipient = await this.readContract<string>(\n          this.consumeContractAddress,\n          UNIFIED_VAULT_ABI,\n          'merchantRecipients',\n          [merchantId]\n        );\n        \n        if (merchantRecipient === '0x0000000000000000000000000000000000000000') {\n          console.error('商家未设置');\n          return {\n            success: false,\n            error: '商家未设置'\n          };\n        }\n      } catch (error: any) {\n        console.error('检查商家设置失败:', error);\n        return {\n          success: false,\n          error: `检查商家设置失败: ${error.message}`\n        };\n      }\n      \n      // 2. 检查代币是否在白名单中\n      try {\n        const isWhitelisted = await this.readContract<boolean>(\n          this.consumeContractAddress,\n          UNIFIED_VAULT_ABI,\n          'tokenWhitelist',\n          [token as `0x${string}`]\n        );\n        \n        if (!isWhitelisted) {\n          console.error('代币不在白名单中');\n          return {\n            success: false,\n            error: '代币不在白名单中'\n          };\n        }\n      } catch (error: any) {\n        console.error('检查代币白名单失败:', error);\n        return {\n          success: false,\n          error: `检查代币白名单失败: ${error.message}`\n        };\n      }\n      \n      // 3. 检查金额是否大于0\n      if (amount <= 0n) {\n        console.error('金额必须大于0');\n        return {\n          success: false,\n          error: '金额必须大于0'\n        };\n      }\n      \n      // 4. 检查序列号是否已使用\n      try {\n        const isUsed = await this.readContract<boolean>(\n          this.consumeContractAddress,\n          UNIFIED_VAULT_ABI,\n          'usedSeq',\n          [seq]\n        );\n        \n        if (isUsed) {\n          console.error('序列号已被使用');\n          return {\n            success: false,\n            error: '序列号已被使用'\n          };\n        }\n      } catch (error: any) {\n        console.error('检查序列号失败:', error);\n        return {\n          success: false,\n          error: `检查序列号失败: ${error.message}`\n        };\n      }\n      \n      // 5. 获取商家配置\n      let merchantConfig: any;\n      try {\n        merchantConfig = await this.readContract<any>(\n          this.consumeContractAddress,\n          UNIFIED_VAULT_ABI,\n          'merchantConfigs',\n          [merchantId]\n        );\n      } catch (error: any) {\n        console.error('获取商家配置失败:', error);\n        return {\n          success: false,\n          error: `获取商家配置失败: ${error.message}`\n        };\n      }\n      \n      // 6. 计算折扣和促销\n      let spendAmount = amount;\n      let discountedAmount = amount;\n      let voucherReward = 0n;\n      let pointsReward = 0n;\n      let promoTierMatched = false;\n      \n      // 这里简化处理，实际上需要获取完整的促销分档信息\n      // 由于合约中的促销分档是数组，这里只能简化处理\n      if (merchantConfig.discountEnabled && amount >= merchantConfig.discountBase) {\n        spendAmount = (amount * merchantConfig.discountRate) / 100n;\n        discountedAmount = spendAmount;\n        console.log('应用折扣:', merchantConfig.discountRate.toString(), '%');\n        console.log('折扣后金额:', spendAmount.toString());\n      }\n      \n      // 7. 如果使用代金券，验证代金券\n      let voucherUsed = 0n;\n      if (voucherId !== 0n) {\n        try {\n          const voucher = await this.readContract<any>(\n            this.consumeContractAddress,\n            UNIFIED_VAULT_ABI,\n            'vouchers',\n            [voucherId]\n          );\n          \n          if (voucher.used) {\n            console.error('代金券已使用');\n            return {\n              success: false,\n              error: '代金券已使用'\n            };\n          }\n          \n          if (voucher.merchantId !== merchantId) {\n            console.error('代金券不属于该商家');\n            return {\n              success: false,\n              error: '代金券不属于该商家'\n            };\n          }\n          \n          const currentTimestamp = BigInt(Math.floor(Date.now() / 1000));\n          if (voucher.expireAt <= currentTimestamp) {\n            console.error('代金券已过期');\n            return {\n              success: false,\n              error: '代金券已过期'\n            };\n          }\n          \n          // 验证代金券所有者\n          const userVouchers = await this.readContract<bigint[]>(\n            this.consumeContractAddress,\n            UNIFIED_VAULT_ABI,\n            'userVouchers',\n            [from as `0x${string}`]\n          );\n          \n          if (!userVouchers.includes(voucherId)) {\n            console.error('不是代金券所有者');\n            return {\n              success: false,\n              error: '不是代金券所有者'\n            };\n          }\n          \n          voucherUsed = voucher.amount;\n          spendAmount = spendAmount > voucherUsed ? spendAmount - voucherUsed : 0n;\n          \n          console.log('✅ 验证通过：代金券有效');\n          console.log('- 代金券抵扣金额:', voucherUsed.toString());\n          console.log('- 抵扣后金额:', spendAmount.toString());\n        } catch (error: any) {\n          console.error('验证代金券失败:', error);\n          return {\n            success: false,\n            error: `验证代金券失败: ${error.message}`\n          };\n        }\n      }\n      \n      // 8. 验证并计算积分抵扣\n      let pointsUsed = 0n;\n      if (pointToUse > 0n) {\n        try {\n          const userPoints = await this.readContract<bigint>(\n            this.consumeContractAddress,\n            UNIFIED_VAULT_ABI,\n            'userPoints',\n            [from as `0x${string}`, merchantId]\n          );\n          \n          // 取用户积分和请求使用积分的较小值\n          pointsUsed = pointToUse > userPoints ? userPoints : pointToUse;\n          \n          // 如果积分大于剩余金额，则只使用等于剩余金额的积分\n          if (pointsUsed > spendAmount) {\n            pointsUsed = spendAmount;\n          }\n          \n          spendAmount -= pointsUsed;\n          \n          console.log('- 可用积分:', userPoints.toString());\n          console.log('- 使用积分:', pointsUsed.toString());\n          console.log('- 积分抵扣后金额:', spendAmount.toString());\n        } catch (error: any) {\n          console.error('验证积分失败:', error);\n          return {\n            success: false,\n            error: `验证积分失败: ${error.message}`\n          };\n        }\n      }\n      \n      // 9. 验证用户余额\n      try {\n        const userBalance = await this.readContract<bigint>(\n          this.consumeContractAddress,\n          UNIFIED_VAULT_ABI,\n          'userBalances',\n          [from as `0x${string}`, token as `0x${string}`]\n        );\n        \n        if (userBalance < spendAmount) {\n          console.error('余额不足');\n          console.error('- 用户余额:', userBalance.toString());\n          console.error('- 需要金额:', spendAmount.toString());\n          return {\n            success: false,\n            error: '余额不足'\n          };\n        }\n        \n        console.log('- 用户余额:', userBalance.toString());\n        console.log('- 需要金额:', spendAmount.toString());\n      } catch (error: any) {\n        console.error('检查用户余额失败:', error);\n        return {\n          success: false,\n          error: `检查用户余额失败: ${error.message}`\n        };\n      }\n      \n      // 10. 获取手续费率并计算手续费\n      try {\n        // 获取手续费率\n        // 注意：这里简化处理，实际应该调用feeRuleProvider.feePpmPerTo(recipient)\n        // 由于我们没有直接访问feeRuleProvider的方式，这里使用固定值\n        const feePpm = 10000n; // 假设费率为1%\n        \n        if (feePpm >= 1000000n) {\n          console.error('费率过高');\n          return {\n            success: false,\n            error: '费率过高'\n          };\n        }\n        \n        const feeAmount = (spendAmount * feePpm) / 1000000n;\n        const merchantAmount = spendAmount - feeAmount;\n        \n        if (merchantAmount <= 0n && feeAmount <= 0n) {\n          console.error('没有可转账的金额');\n          return {\n            success: false,\n            error: '没有可转账的金额'\n          };\n        }\n        \n        // 11. 计算奖励\n        // 这里简化处理，实际应根据商家配置计算\n        if (merchantConfig.cashbackPointEnabled && amount >= merchantConfig.cashbackPointBase) {\n          pointsReward = merchantConfig.cashbackPointAmount;\n        }\n        \n        if (merchantConfig.cashbackVoucherEnabled && amount >= merchantConfig.cashbackVoucherBase) {\n          voucherReward = merchantConfig.cashbackVoucherAmount;\n        }\n        \n        console.log('验证通过');\n        console.log('- 原始金额:', amount.toString());\n        console.log('- 折扣后金额:', discountedAmount.toString());\n        console.log('- 代金券抵扣:', voucherUsed.toString());\n        console.log('- 积分抵扣:', pointsUsed.toString());\n        console.log('- 实际扣除金额:', spendAmount.toString());\n        console.log('- 手续费率:', feePpm.toString(), 'ppm');\n        console.log('- 手续费:', feeAmount.toString());\n        console.log('- 商家到账金额:', merchantAmount.toString());\n        console.log('- 返积分:', pointsReward.toString());\n        console.log('- 返券金额:', voucherReward.toString());\n        \n        return {\n          success: true,\n          fee: feeAmount,\n          merchantAmount,\n          rewardAmount: pointsReward,\n          voucherReward,\n          discountedAmount,\n          pointsUsed,\n          voucherUsed,\n          spendAmount\n        };\n      } catch (error: any) {\n        console.error('计算手续费和奖励失败:', error);\n        return {\n          success: false,\n          error: `计算手续费和奖励失败: ${error.message}`\n        };\n      }\n    } catch (error: any) {\n      console.error('验证消费请求失败:', error);\n      return {\n        success: false,\n        error: `验证消费请求失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 验证存款请求\n   * @param params 请求参数\n   * @returns 验证结果\n   */\n  async validateDepositRequest(params: {\n    token: string,\n    amount: bigint,\n    seq: bigint,\n    from: string\n  }): Promise<ValidationResult> {\n    try {\n      // 确保客户端已初始化\n      await this.ensureWalletConnected();\n      \n      const { token, amount, seq, from } = params;\n      \n      console.log('验证存款请求...');\n      console.log('- 代币:', token);\n      console.log('- 金额:', amount.toString());\n      console.log('- 序列号:', seq.toString());\n      console.log('- 发送方:', from);\n      \n      // 1. 检查代币是否在白名单中\n      try {\n        const isWhitelisted = await this.readContract<boolean>(\n          this.consumeContractAddress,\n          UNIFIED_VAULT_ABI,\n          'tokenWhitelist',\n          [token as `0x${string}`]\n        );\n        \n        if (!isWhitelisted) {\n          console.error('代币不在白名单中');\n          return {\n            success: false,\n            error: '代币不在白名单中'\n          };\n        }\n      } catch (error: any) {\n        console.error('检查代币白名单失败:', error);\n        return {\n          success: false,\n          error: `检查代币白名单失败: ${error.message}`\n        };\n      }\n      \n      // 2. 检查金额是否大于0\n      if (amount <= 0n) {\n        console.error('金额必须大于0');\n        return {\n          success: false,\n          error: '金额必须大于0'\n        };\n      }\n      \n      // 3. 检查用户是否有足够的代币余额和授权\n      try {\n        // 获取代币余额\n        const balance = await this.readContract<bigint>(\n          token as `0x${string}`,\n          ERC20_ABI,\n          'balanceOf',\n          [from as `0x${string}`]\n        );\n        \n        if (balance < amount) {\n          console.error('代币余额不足');\n          return {\n            success: false,\n            error: '代币余额不足'\n          };\n        }\n        \n        // 检查授权额度\n        const allowance = await this.readContract<bigint>(\n          token as `0x${string}`,\n          ERC20_ABI,\n          'allowance',\n          [from as `0x${string}`, this.consumeContractAddress as `0x${string}`]\n        );\n        \n        if (allowance < amount) {\n          console.error('代币授权不足');\n          return {\n            success: false,\n            error: '代币授权不足'\n          };\n        }\n      } catch (error: any) {\n        console.error('检查代币余额和授权失败:', error);\n        return {\n          success: false,\n          error: `检查代币余额和授权失败: ${error.message}`\n        };\n      }\n      \n      console.log('验证通过');\n      \n      return {\n        success: true\n      };\n    } catch (error: any) {\n      console.error('验证存款请求失败:', error);\n      return {\n        success: false,\n        error: `验证存款请求失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 验证提款请求\n   * @param params 请求参数\n   * @returns 验证结果\n   */\n  async validateWithdrawRequest(params: {\n    token: string,\n    amount: bigint,\n    seq: bigint,\n    from: string\n  }): Promise<ValidationResult> {\n    try {\n      // 确保客户端已初始化\n      await this.ensureWalletConnected();\n      \n      const { token, amount, seq, from } = params;\n      \n      console.log('验证提款请求...');\n      console.log('- 代币:', token);\n      console.log('- 金额:', amount.toString());\n      console.log('- 序列号:', seq.toString());\n      console.log('- 发送方:', from);\n      \n      // 1. 检查用户余额\n      try {\n        const userBalance = await this.readContract<bigint>(\n          this.consumeContractAddress,\n          UNIFIED_VAULT_ABI,\n          'userBalances',\n          [from as `0x${string}`, token as `0x${string}`]\n        );\n        \n        if (userBalance < amount) {\n          console.error('余额不足');\n          console.error('- 用户余额:', userBalance.toString());\n          console.error('- 提款金额:', amount.toString());\n          return {\n            success: false,\n            error: '余额不足'\n          };\n        }\n        \n        console.log('- 用户余额:', userBalance.toString());\n        console.log('- 提款金额:', amount.toString());\n      } catch (error: any) {\n        console.error('检查用户余额失败:', error);\n        return {\n          success: false,\n          error: `检查用户余额失败: ${error.message}`\n        };\n      }\n      \n      console.log('验证通过');\n      \n      return {\n        success: true\n      };\n    } catch (error: any) {\n      console.error('验证提款请求失败:', error);\n      return {\n        success: false,\n        error: `验证提款请求失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 编码支付调用数据\n   * @param token 代币地址\n   * @param to 接收方地址\n   * @param amount 金额\n   * @param seq 序列号\n   * @returns 编码后的调用数据\n   */\n  private encodePayCallData(\n    token: string,\n    to: string,\n    amount: bigint,\n    seq: bigint\n  ): `0x${string}` {\n    return encodeFunctionData({\n      abi: PAYMENT_CONTRACT_ABI,\n      functionName: 'pay',\n      args: [\n        token as `0x${string}`,\n        to as `0x${string}`,\n        amount,\n        seq\n      ]\n    });\n  }\n\n  /**\n   * 编码消费调用数据\n   * @param merchantId 商家ID\n   * @param token 代币地址\n   * @param amount 金额\n   * @param voucherId 代金券ID\n   * @param pointToUse 使用的积分\n   * @param seq 序列号\n   * @returns 编码后的调用数据\n   */\n  private encodeConsumeCallData(\n    merchantId: string,\n    token: string,\n    amount: bigint,\n    voucherId: bigint,\n    pointToUse: bigint,\n    seq: bigint\n  ): `0x${string}` {\n    return encodeFunctionData({\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'consume',\n      args: [\n        merchantId,\n        token as `0x${string}`,\n        amount,\n        voucherId,\n        pointToUse,\n        seq\n      ]\n    });\n  }\n\n  /**\n   * 编码存款调用数据\n   * @param token 代币地址\n   * @param amount 金额\n   * @returns 编码后的调用数据\n   */\n  private encodeDepositCallData(\n    token: string,\n    amount: bigint\n  ): `0x${string}` {\n    return encodeFunctionData({\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'deposit',\n      args: [\n        token as `0x${string}`,\n        amount\n      ]\n    });\n  }\n\n  /**\n   * 编码提款调用数据\n   * @param token 代币地址\n   * @param amount 金额\n   * @returns 编码后的调用数据\n   */\n  private encodeWithdrawCallData(\n    token: string,\n    amount: bigint\n  ): `0x${string}` {\n    return encodeFunctionData({\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'withdraw',\n      args: [\n        token as `0x${string}`,\n        amount\n      ]\n    });\n  }\n\n  /**\n   * 获取nonce\n   * @param address 地址\n   * @param options 选项\n   * @returns nonce\n   */\n  async getNonce(address: string, options?: { timeout?: number }): Promise<bigint> {\n    try {\n      return await this.readContract<bigint>(\n        this.forwarderAddress,\n        ERC2771_FORWARDER_ABI,\n        'nonces',\n        [address as `0x${string}`],\n        options\n      );\n    } catch (error: any) {\n      console.error('获取nonce失败:', error);\n      throw new Error(`获取nonce失败: ${error.message}`);\n    }\n  }\n\n  /**\n   * 解析请求数据并根据操作类型进行验证\n   * @param type 操作类型\n   * @param request 简化的请求数据\n   * @returns 验证结果\n   */\n  async validateSimpleRequest(\n    type: OperationType,\n    request: SimpleRelayerRequest\n  ): Promise<ValidationResult> {\n    try {\n      console.log(`解析并验证 ${type} 请求...`);\n      console.log('- 调用数据:', request.data);\n      \n      let validationResult: ValidationResult;\n      \n      // 根据操作类型解析函数调用数据\n      if (type === OperationType.Payment) {\n        const payParams = this.decodePaymentData(request.data);\n        validationResult = await this.validatePaymentRequest({\n          token: payParams.token,\n          to: payParams.to,\n          amount: payParams.amount,\n          gasFee: payParams.gasFee || 0n,\n          seq: payParams.seq,\n          from: request.from\n        });\n      } \n      else if (type === OperationType.Consume) {\n        const consumeParams = this.decodeConsumeData(request.data);\n        validationResult = await this.validateConsumeRequest({\n          token: consumeParams.token,\n          merchantId: consumeParams.merchantId,\n          amount: consumeParams.amount,\n          seq: consumeParams.seq,\n          from: request.from,\n          voucherId: consumeParams.voucherId,\n          pointToUse: consumeParams.pointToUse\n        });\n      }\n      else if (type === OperationType.Deposit) {\n        const depositParams = this.decodeDepositData(request.data);\n        validationResult = await this.validateDepositRequest({\n          token: depositParams.token,\n          amount: depositParams.amount,\n          seq: 0n, // deposit没有seq参数\n          from: request.from\n        });\n      }\n      else if (type === OperationType.Withdraw) {\n        const withdrawParams = this.decodeWithdrawData(request.data);\n        validationResult = await this.validateWithdrawRequest({\n          token: withdrawParams.token,\n          amount: withdrawParams.amount,\n          seq: 0n, // withdraw没有seq参数\n          from: request.from\n        });\n      }\n      else {\n        throw new Error(`不支持的操作类型: ${type}`);\n      }\n      \n      return validationResult;\n    } catch (error: any) {\n      console.error('解析和验证请求失败:', error);\n      return {\n        success: false,\n        error: `解析和验证请求失败: ${error.message}`\n      };\n    }\n  }\n  \n  /**\n   * 使用简化接口发送请求\n   * @param type 操作类型\n   * @param request 简化的请求数据\n   * @returns 发送结果\n   */\n  async sendSimpleRequest(\n    type: OperationType,\n    request: SimpleRelayerRequest\n  ): Promise<{\n    success: boolean,\n    txHash?: string,\n    error?: string\n  }> {\n    try {\n      // 确保钱包已连接\n      await this.ensureWalletConnected();\n      \n      // 转换参数类型\n      const forwardRequest = {\n        from: request.from as `0x${string}`,\n        to: request.to as `0x${string}`,\n        value: BigInt(request.value || '0'),\n        gas: BigInt(request.gas || '500000'),\n        deadline: BigInt(request.deadline),\n        data: request.data as `0x${string}`,\n        signature: request.signature as `0x${string}`\n      };\n      \n      console.log('发送转发请求...');\n      console.log('- 类型:', type);\n      console.log('- 发送方:', request.from);\n      console.log('- 目标合约:', request.to);\n      console.log('- 截止时间:', request.deadline);\n      \n      // 发送交易\n      const txHash = await this.writeContract(\n        this.forwarderAddress,\n        ERC2771_FORWARDER_ABI,\n        'execute',\n        [forwardRequest]\n      );\n      \n      console.log('交易已发送，哈希:', txHash);\n      \n      return {\n        success: true,\n        txHash\n      };\n    } catch (error: any) {\n      console.error('发送请求失败:', error);\n      return {\n        success: false,\n        error: `发送请求失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 解析支付函数调用数据\n   * @param data 调用数据\n   * @returns 解析后的参数\n   */\n  private decodePaymentData(data: string): {\n    token: string,\n    to: string,\n    amount: bigint,\n    gasFee?: bigint,\n    seq: bigint\n  } {\n    try {\n      // 检查函数选择器\n      const functionSelector = data.slice(0, 10);\n      \n      if (functionSelector === '0xa4b072d0') { // pay 函数选择器\n        console.log('检测到 pay 函数调用，解析参数...');\n        \n        // 尝试使用viem的解码功能\n        try {\n          const decoded = decodeFunctionData({\n            abi: PAYMENT_CONTRACT_ABI,\n            data: data as `0x${string}`\n          });\n          \n          if (decoded.functionName === 'pay' && decoded.args && Array.isArray(decoded.args)) {\n            const token = decoded.args[0] !== undefined ? String(decoded.args[0]) : '';\n            const to = decoded.args[1] !== undefined ? String(decoded.args[1]) : '';\n            const amount = decoded.args[2] !== undefined ? BigInt(Number(decoded.args[2])) : 0n;\n            const seq = decoded.args[3] !== undefined ? BigInt(Number(decoded.args[3])) : 0n;\n            \n            return { token, to, amount, seq };\n          }\n        } catch (decodeError) {\n          console.log('使用viem解码失败，尝试手动解析:', decodeError);\n        }\n        \n        // 手动解析\n        const payFunctionArguments = data.slice(10);\n        const token = '0x' + payFunctionArguments.slice(0, 64).slice(-40);\n        const to = '0x' + payFunctionArguments.slice(64, 128).slice(-40);\n        const amount = BigInt('0x' + payFunctionArguments.slice(128, 192));\n        const seq = BigInt('0x' + payFunctionArguments.slice(192, 256));\n        \n        return { token, to, amount, seq };\n      } else {\n        throw new Error(`未知的函数选择器: ${functionSelector}`);\n      }\n    } catch (error: any) {\n      console.error('解析支付数据失败:', error);\n      throw new Error(`解析支付数据失败: ${error.message}`);\n    }\n  }\n  \n  /**\n   * 解析消费函数调用数据\n   * @param data 调用数据\n   * @returns 解析后的参数\n   */\n  private decodeConsumeData(data: string): {\n    merchantId: string,\n    token: string,\n    amount: bigint,\n    voucherId: bigint,\n    pointToUse: bigint,\n    seq: bigint\n  } {\n    try {\n      // 检查函数选择器\n      const functionSelector = data.slice(0, 10);\n      \n      if (functionSelector === '0x5d495aea') { // consume 函数选择器\n        console.log('检测到 consume 函数调用，解析参数...');\n        \n        // 尝试使用viem的解码功能\n        try {\n          const decoded = decodeFunctionData({\n            abi: UNIFIED_VAULT_ABI,\n            data: data as `0x${string}`\n          });\n          \n          if (decoded.functionName === 'consume' && decoded.args && Array.isArray(decoded.args)) {\n            const merchantId = decoded.args[0] !== undefined ? String(decoded.args[0]) : '';\n            const token = decoded.args[1] !== undefined ? String(decoded.args[1]) : '';\n            const amount = decoded.args[2] !== undefined ? BigInt(Number(decoded.args[2])) : 0n;\n            const voucherId = decoded.args[3] !== undefined ? BigInt(Number(decoded.args[3])) : 0n;\n            const pointToUse = decoded.args[4] !== undefined ? BigInt(Number(decoded.args[4])) : 0n;\n            const seq = decoded.args[5] !== undefined ? BigInt(Number(decoded.args[5])) : 0n;\n            \n            return { merchantId, token, amount, voucherId, pointToUse, seq };\n          }\n        } catch (decodeError) {\n          console.log('使用viem解码失败，尝试手动解析:', decodeError);\n        }\n        \n        // 手动解析\n        const consumeFunctionArguments = data.slice(10);\n        const merchantId = '0x' + consumeFunctionArguments.slice(0, 64).slice(-40);\n        const token = '0x' + consumeFunctionArguments.slice(64, 128).slice(-40);\n        const amount = BigInt('0x' + consumeFunctionArguments.slice(128, 192));\n        const voucherId = BigInt('0x' + consumeFunctionArguments.slice(192, 256));\n        const pointToUse = BigInt('0x' + consumeFunctionArguments.slice(256, 320));\n        const seq = BigInt('0x' + consumeFunctionArguments.slice(320, 384));\n        \n        return { merchantId, token, amount, voucherId, pointToUse, seq };\n      } else {\n        throw new Error(`未知的函数选择器: ${functionSelector}`);\n      }\n    } catch (error: any) {\n      console.error('解析消费数据失败:', error);\n      throw new Error(`解析消费数据失败: ${error.message}`);\n    }\n  }\n  \n  /**\n   * 解析存款函数调用数据\n   * @param data 调用数据\n   * @returns 解析后的参数\n   */\n  private decodeDepositData(data: string): {\n    token: string,\n    amount: bigint\n  } {\n    try {\n      // 检查函数选择器\n      const functionSelector = data.slice(0, 10);\n      \n      if (functionSelector === '0x47e7ef24') { // deposit 函数选择器\n        console.log('检测到 deposit 函数调用，解析参数...');\n        \n        // 尝试使用viem的解码功能\n        try {\n          const decoded = decodeFunctionData({\n            abi: UNIFIED_VAULT_ABI,\n            data: data as `0x${string}`\n          });\n          \n          if (decoded.functionName === 'deposit' && decoded.args && Array.isArray(decoded.args)) {\n            const token = decoded.args[0] !== undefined ? String(decoded.args[0]) : '';\n            const amount = decoded.args[1] !== undefined ? BigInt(Number(decoded.args[1])) : 0n;\n            \n            return { token, amount };\n          }\n        } catch (decodeError) {\n          console.log('使用viem解码失败，尝试手动解析:', decodeError);\n        }\n        \n        // 手动解析\n        const depositFunctionArguments = data.slice(10);\n        const token = '0x' + depositFunctionArguments.slice(0, 64).slice(-40);\n        const amount = BigInt('0x' + depositFunctionArguments.slice(64, 128));\n        \n        return { token, amount };\n      } else {\n        throw new Error(`未知的函数选择器: ${functionSelector}`);\n      }\n    } catch (error: any) {\n      console.error('解析存款数据失败:', error);\n      throw new Error(`解析存款数据失败: ${error.message}`);\n    }\n  }\n  \n  /**\n   * 解析提款函数调用数据\n   * @param data 调用数据\n   * @returns 解析后的参数\n   */\n  private decodeWithdrawData(data: string): {\n    token: string,\n    amount: bigint\n  } {\n    try {\n      // 检查函数选择器\n      const functionSelector = data.slice(0, 10);\n      \n      if (functionSelector === '0x441a3e70') { // withdraw 函数选择器\n        console.log('检测到 withdraw 函数调用，解析参数...');\n        \n        // 尝试使用viem的解码功能\n        try {\n          const decoded = decodeFunctionData({\n            abi: UNIFIED_VAULT_ABI,\n            data: data as `0x${string}`\n          });\n          \n          if (decoded.functionName === 'withdraw' && decoded.args && Array.isArray(decoded.args)) {\n            const token = decoded.args[0] !== undefined ? String(decoded.args[0]) : '';\n            const amount = decoded.args[1] !== undefined ? BigInt(Number(decoded.args[1])) : 0n;\n            \n            return { token, amount };\n          }\n        } catch (decodeError) {\n          console.log('使用viem解码失败，尝试手动解析:', decodeError);\n        }\n        \n        // 手动解析\n        const withdrawFunctionArguments = data.slice(10);\n        const token = '0x' + withdrawFunctionArguments.slice(0, 64).slice(-40);\n        const amount = BigInt('0x' + withdrawFunctionArguments.slice(64, 128));\n        \n        return { token, amount };\n      } else {\n        throw new Error(`未知的函数选择器: ${functionSelector}`);\n      }\n    } catch (error: any) {\n      console.error('解析提款数据失败:', error);\n      throw new Error(`解析提款数据失败: ${error.message}`);\n    }\n  }\n} ","import { recoverTypedDataAddress } from 'viem';\nimport { \n  erc2771ForwarderAddress, \n  FORWARD_REQUEST_TYPES,\n  EIP712_DOMAIN_TYPE\n} from '../config/contract';\nimport { BlockchainService } from './blockchain';\n\n// 检查是否在浏览器环境中\nconst isBrowser = typeof window !== 'undefined';\n\nexport interface ForwardRequestData {\n  from: string;\n  to: string;\n  value: string;\n  gas: string;\n  nonce: string;\n  deadline: string;\n  data: string;\n}\n\n/**\n * 签名服务类\n * 负责处理EIP-712签名和验证\n */\nexport class SigningService {\n  private blockchainService: BlockchainService;\n\n  constructor(blockchainService: BlockchainService) {\n    this.blockchainService = blockchainService;\n  }\n\n  /**\n   * 验证EIP-712签名\n   */\n  async verifyTypedDataSignature({\n    chainId,\n    message,\n    signature,\n    expectedSigner\n  }: {\n    chainId: number,\n    message: any\n    signature: string\n    expectedSigner: string\n  }) {\n    const domain = {\n      name: 'MetaTxForwarder',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: erc2771ForwarderAddress \n    }\n    \n    const signer = await recoverTypedDataAddress({\n      domain,\n      types: FORWARD_REQUEST_TYPES,\n      primaryType: 'ForwardRequest',\n      message,\n      signature: signature as `0x${string}`\n    })\n    \n    const valid = signer.toLowerCase() === expectedSigner.toLowerCase()\n    return { valid, signer }\n  }\n\n  /**\n   * 生成 EIP-712 签名\n   */\n  async signTypedData(\n    request: ForwardRequestData,\n    chainId: number,\n    nonce: bigint\n  ): Promise<string> {\n    console.log('开始签名过程，参数:');\n    console.log('- 账户地址:', request.from);\n    console.log('- 链 ID:', chainId);\n    console.log('- Nonce:', nonce.toString());\n\n    const domain = {\n      name: 'MetaTxForwarder',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: erc2771ForwarderAddress \n    }\n    \n    // 确保所有值都是字符串形式，避免 BigInt 序列化问题\n    const safeRequest = {\n      from: request.from,\n      to: request.to,\n      value: request.value.toString(),\n      gas: request.gas.toString(),\n      nonce: request.nonce.toString(),\n      deadline: request.deadline.toString(),\n      data: request.data\n    };\n    \n    try {\n      // 获取钱包客户端\n      const wallet = this.blockchainService.getWalletClient();\n      const account = this.blockchainService.getAccount();\n      \n      if (!wallet || !account) {\n        throw new Error('钱包未连接或初始化失败');\n      }\n      \n      // 尝试直接使用 viem 的钱包客户端进行签名\n      if (wallet.signTypedData) {\n        console.log('使用 viem 钱包客户端签名...');\n        try {\n          const signature = await wallet.signTypedData({\n            account,\n            domain,\n            types: { ...FORWARD_REQUEST_TYPES },\n            primaryType: 'ForwardRequest',\n            message: safeRequest\n          });\n          console.log('viem 签名成功:', signature);\n          return signature as string;\n        } catch (viemError: any) {\n          console.warn('viem 签名失败，回退到原生方法:', viemError.message);\n        }\n      }\n      \n      // 回退到使用浏览器的原生签名方法\n      if (!isBrowser || !window.ethereum) {\n        throw new Error('浏览器环境不可用或未安装钱包');\n      }\n      \n      console.log('使用浏览器原生签名方法...');\n      \n      // 为钱包构建签名数据\n      const typedDataForWallet = {\n        domain: { ...domain, chainId: domain.chainId.toString() },\n        message: safeRequest,\n        primaryType: 'ForwardRequest',\n        types: {\n          EIP712Domain: EIP712_DOMAIN_TYPE,\n          ...FORWARD_REQUEST_TYPES\n        },\n      };\n      \n      let signature: string;\n      \n      // 尝试 eth_signTypedData_v4，如果不支持则回退到其他方法\n      try {\n        signature = await window.ethereum.request({\n          method: 'eth_signTypedData_v4',\n          params: [\n            request.from,\n            JSON.stringify(typedDataForWallet)\n          ]\n        });\n      } catch (v4Error: any) {\n        console.warn('eth_signTypedData_v4 失败，尝试 eth_signTypedData_v3');\n        signature = await window.ethereum.request({\n          method: 'eth_signTypedData_v3',\n          params: [\n            request.from,\n            JSON.stringify(typedDataForWallet)\n          ]\n        });\n      }\n      \n      // 验证签名\n      const { valid, signer } = await this.verifyTypedDataSignature({\n        chainId,\n        message: safeRequest,\n        signature: signature,\n        expectedSigner: request.from\n      });\n      \n      console.log('签名验证：', valid, signer);\n      \n      if (!valid) {\n        throw new Error('签名验证失败');\n      }\n      \n      console.log('签名成功:', signature);\n      return signature;\n    } catch (error: any) {\n      console.error('签名过程中出错:', error);\n      throw new Error(`签名失败: ${error.message}`);\n    }\n  }\n} ","import { \n  encodeFunctionData,\n  keccak256,\n  type Hash,\n  type Account\n} from 'viem';\nimport { \n  ERC20_ABI, \n  PAYMENT_CONTRACT_ABI, \n  paymentContractAddress, \n  erc2771ForwarderAddress, \n  UnifiedVaultContractAddress, \n  UNIFIED_VAULT_ABI,\n  FORWARD_REQUEST_TYPES,\n  EIP712_DOMAIN_TYPE\n} from '../config/contract';\nimport { BlockchainService } from './blockchain';\nimport { SigningService } from './signing';\n\n// 检查是否在浏览器环境中\nconst isBrowser = typeof window !== 'undefined';\n\n// 安全地访问window.ethereum\nconst getEthereum = () => {\n  if (!isBrowser) {\n    return null;\n  }\n  return window.ethereum;\n};\n\nexport interface ForwardRequestData {\n  from: string;     // address\n  to: string;       // address\n  value: string;    // uint256\n  gas: string;      // uint256\n  nonce: string;    // uint256\n  deadline: string; // uint48\n  data: string;     // bytes\n}\n\nexport interface SignedRequest extends ForwardRequestData {\n  signature?: string;\n}\n\nexport class TransactionService {\n  private blockchainService: BlockchainService;\n  private signingService: SigningService;\n\n  constructor(blockchainService: BlockchainService) {\n    this.blockchainService = blockchainService;\n    this.signingService = new SigningService(blockchainService);\n  }\n\n  // === ERC20代币相关 ===\n\n  // 授权代币\n  async approveToken(tokenAddress: string, spender: string, amount: bigint): Promise<Hash> {\n    await this.blockchainService.ensureTokenAllowance(tokenAddress, spender, amount);\n    return '0x' as Hash;\n  }\n\n  // 检查授权额度\n  async checkAllowance(tokenAddress: string, owner: string, spender: string): Promise<bigint> {\n    return await this.blockchainService.readContract<bigint>(\n      tokenAddress,\n      ERC20_ABI,\n      'allowance',\n      [owner as `0x${string}`, spender as `0x${string}`]\n    );\n  }\n\n  // === 支付合约相关 ===\n\n  // 编码对 pay 函数的调用\n  encodePayCallData(\n    token: string,\n    to: string,\n    amount: bigint, // 金额\n    seq: bigint = 0n,  // api获取的\n  ): `0x${string}` {\n    const payData = encodeFunctionData({\n      abi: PAYMENT_CONTRACT_ABI,\n      functionName: 'pay',\n      args: [\n        token as `0x${string}`,\n        to as `0x${string}`,\n        amount,\n        seq\n      ]\n    }) as `0x${string}`;\n    \n    console.log('编码 pay 调用参数:');\n    console.log('- token:', token);\n    console.log('- to:', to);\n    console.log('- amount:', amount.toString());\n    console.log('- seq:', seq.toString());\n\n    return payData;\n  }\n\n  // 用户直接支付（自己付gas）\n  async userPayDirect(\n    to: string,\n    amount: bigint,\n    tokenAddress?: string,\n    seq: bigint = BigInt(Math.floor(Date.now() / 1000))\n  ): Promise<Hash> {\n    return await this.blockchainService.writeContract(\n      paymentContractAddress,\n      PAYMENT_CONTRACT_ABI,\n      'pay',\n      [\n        (tokenAddress || '0x0000000000000000000000000000000000000000') as `0x${string}`,\n        to as `0x${string}`,\n        amount,\n        seq\n      ],\n      tokenAddress ? 0n : amount\n    );\n  }\n\n  // 准备代付gas的支付请求 (仅签名，不发送)\n  async prepareRelayedPayment(\n    to: string,\n    amount: bigint,\n    tokenAddress?: string,\n    seq: bigint = BigInt(Math.floor(Date.now() / 1000)),\n    deadlineSeconds: number = 3600 // 默认1小时过期\n  ): Promise<SignedRequest> {\n    await this.blockchainService.ensureWalletConnected();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    // 如果是代币支付，确保有足够的授权\n    if (tokenAddress) {\n      await this.blockchainService.ensureTokenAllowance(\n        tokenAddress,\n        paymentContractAddress,\n        amount\n      );\n    }\n\n    // 编码pay函数调用\n    const payCallData = this.encodePayCallData(\n      tokenAddress || '0x0000000000000000000000000000000000000000',\n      to,\n      amount,\n      seq\n    );\n\n    // 设置截止时间 (当前时间 + 指定秒数)\n    const deadline = Math.floor(Date.now() / 1000) + deadlineSeconds;\n    \n    // 获取用户地址的 nonce\n    const userNonce = await this.blockchainService.getNonce(account.address);\n    \n    // 创建符合 ForwardRequestData 结构的请求数据\n    const request: ForwardRequestData = {\n      from: account.address,\n      to: paymentContractAddress,\n      value: tokenAddress ? '0' : amount.toString(), // 如果是代币支付，value为0\n      gas: '3000000', // 设置合理的 gas 限制\n      nonce: userNonce.toString(), // 添加 nonce 字段\n      deadline: deadline.toString(), // 设置截止时间\n      data: payCallData\n    };\n    \n    // 尝试生成签名\n    try {\n      const signature = await this.signingService.signTypedData(request, chainId, userNonce);\n      return { ...request, signature };\n    } catch (signError: any) {\n      console.error('生成签名失败:', signError);\n      throw new Error(`生成签名失败: ${signError.message}`);\n    }\n  }\n\n  // === UnifiedVault相关 ===\n\n  // 存款到金库\n  async depositToVault(\n    tokenAddress: string,\n    amount: bigint\n  ): Promise<Hash> {\n    // 确保有足够的授权\n    await this.blockchainService.ensureTokenAllowance(\n      tokenAddress,\n      UnifiedVaultContractAddress,\n      amount\n    );\n\n    // 调用金库合约的deposit方法\n    return await this.blockchainService.writeContract(\n      UnifiedVaultContractAddress,\n      UNIFIED_VAULT_ABI,\n      'deposit',\n      [tokenAddress as `0x${string}`, amount]\n    );\n  }\n\n  // 从金库提款\n  async withdrawFromVault(\n    tokenAddress: string,\n    amount: bigint\n  ): Promise<Hash> {\n    return await this.blockchainService.writeContract(\n      UnifiedVaultContractAddress,\n      UNIFIED_VAULT_ABI,\n      'withdraw',\n      [tokenAddress as `0x${string}`, amount]\n    );\n  }\n\n  // 从金库消费\n  async consumeFromVault(\n    merchantId: string,\n    tokenAddress: string,\n    amount: bigint,\n    voucherId: bigint = 0n,\n    pointToUse: bigint = 0n,\n    seq: bigint = BigInt(Math.floor(Date.now() / 1000))\n  ): Promise<Hash> {\n    return await this.blockchainService.writeContract(\n      UnifiedVaultContractAddress,\n      UNIFIED_VAULT_ABI,\n      'consume',\n      [\n        merchantId as `0x${string}`,\n        tokenAddress as `0x${string}`,\n        amount,\n        voucherId,\n        pointToUse,\n        seq\n      ]\n    );\n  }\n\n  // 准备代付gas的消费请求\n  async prepareRelayedConsume(\n    merchantId: string,\n    tokenAddress: string,\n    amount: bigint,\n    voucherId: bigint = 0n,\n    pointToUse: bigint = 0n,\n    seq: bigint = BigInt(Math.floor(Date.now() / 1000)),\n    deadlineSeconds: number = 3600 // 默认1小时过期\n  ): Promise<SignedRequest> {\n    await this.blockchainService.ensureWalletConnected();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    // 编码consume函数调用\n    const consumeCallData = encodeFunctionData({\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'consume',\n      args: [\n        merchantId as `0x${string}`,\n        tokenAddress as `0x${string}`,\n        amount,\n        voucherId,\n        pointToUse,\n        seq\n      ]\n    }) as `0x${string}`;\n\n    // 设置截止时间 (当前时间 + 指定秒数)\n    const deadline = Math.floor(Date.now() / 1000) + deadlineSeconds;\n    \n    // 获取用户地址的 nonce\n    const userNonce = await this.blockchainService.getNonce(account.address);\n    \n    // 创建符合 ForwardRequestData 结构的请求数据\n    const request: ForwardRequestData = {\n      from: account.address,\n      to: UnifiedVaultContractAddress,\n      value: '0', // 消费不需要原生代币\n      gas: '3000000', // 设置合理的 gas 限制\n      nonce: userNonce.toString(),\n      deadline: deadline.toString(),\n      data: consumeCallData\n    };\n    \n    // 尝试生成签名\n    try {\n      const signature = await this.signingService.signTypedData(request, chainId, userNonce);\n      return { ...request, signature };\n    } catch (signError: any) {\n      console.error('生成签名失败:', signError);\n      throw new Error(`生成签名失败: ${signError.message}`);\n    }\n  }\n\n  // 准备代付gas的存款请求\n  async prepareRelayedDeposit(\n    tokenAddress: string,\n    amount: bigint,\n    deadlineSeconds: number = 3600 // 默认1小时过期\n  ): Promise<SignedRequest> {\n    await this.blockchainService.ensureWalletConnected();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    // 确保有足够的授权\n    await this.blockchainService.ensureTokenAllowance(\n      tokenAddress,\n      UnifiedVaultContractAddress,\n      amount\n    );\n\n    // 编码deposit函数调用\n    const depositCallData = encodeFunctionData({\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'deposit',\n      args: [\n        tokenAddress as `0x${string}`,\n        amount\n      ]\n    }) as `0x${string}`;\n\n    // 设置截止时间 (当前时间 + 指定秒数)\n    const deadline = Math.floor(Date.now() / 1000) + deadlineSeconds;\n    \n    // 获取用户地址的 nonce\n    const userNonce = await this.blockchainService.getNonce(account.address);\n    \n    // 创建符合 ForwardRequestData 结构的请求数据\n    const request: ForwardRequestData = {\n      from: account.address,\n      to: UnifiedVaultContractAddress,\n      value: '0', // 存款不需要原生代币，因为是 ERC20 代币\n      gas: '3000000', // 设置合理的 gas 限制\n      nonce: userNonce.toString(),\n      deadline: deadline.toString(),\n      data: depositCallData\n    };\n    \n    // 尝试生成签名\n    try {\n      const signature = await this.signingService.signTypedData(request, chainId, userNonce);\n      return { ...request, signature };\n    } catch (signError: any) {\n      console.error('生成签名失败:', signError);\n      throw new Error(`生成签名失败: ${signError.message}`);\n    }\n  }\n\n  // 准备代付gas的提款请求\n  async prepareRelayedWithdraw(\n    tokenAddress: string,\n    amount: bigint,\n    deadlineSeconds: number = 3600 // 默认1小时过期\n  ): Promise<SignedRequest> {\n    await this.blockchainService.ensureWalletConnected();\n    const account = this.blockchainService.getAccount();\n    const chainId = this.blockchainService.getChainId();\n\n    if (!account || chainId === undefined) {\n      throw new Error('钱包未连接或初始化失败');\n    }\n\n    // 编码withdraw函数调用\n    const withdrawCallData = encodeFunctionData({\n      abi: UNIFIED_VAULT_ABI,\n      functionName: 'withdraw',\n      args: [\n        tokenAddress as `0x${string}`,\n        amount\n      ]\n    }) as `0x${string}`;\n\n    // 设置截止时间 (当前时间 + 指定秒数)\n    const deadline = Math.floor(Date.now() / 1000) + deadlineSeconds;\n    \n    // 获取用户地址的 nonce\n    const userNonce = await this.blockchainService.getNonce(account.address);\n    \n    // 创建符合 ForwardRequestData 结构的请求数据\n    const request: ForwardRequestData = {\n      from: account.address,\n      to: UnifiedVaultContractAddress,\n      value: '0', // 提款不需要原生代币\n      gas: '3000000', // 设置合理的 gas 限制\n      nonce: userNonce.toString(),\n      deadline: deadline.toString(),\n      data: withdrawCallData\n    };\n    \n    // 尝试生成签名\n    try {\n      const signature = await this.signingService.signTypedData(request, chainId, userNonce);\n      return { ...request, signature };\n    } catch (signError: any) {\n      console.error('生成签名失败:', signError);\n      throw new Error(`生成签名失败: ${signError.message}`);\n    }\n  }\n} "],"names":["UnifiedVaultContractAddress","UNIFIED_VAULT_ABI","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","paymentContractAddress","PAYMENT_CONTRACT_ABI","ERC2771_FORWARDER_ABI","erc2771ForwarderAddress","keccak256","EIP712_DOMAIN_TYPE","FORWARD_REQUEST_TYPES","ForwardRequest","ERC20_ABI","isBrowser","window","WalletService","constructor","config","this","initializeClients","console","log","useMetaMask","warn","Error","provider","ethereum","walletLinkExtension","walletConnect","coinbaseWalletExtension","error","chainIdHex","request","method","chainId","parseInt","wallet","createWalletClient","transport","custom","publicClient","createPublicClient","message","code","data","connectWallet","address","requestAddresses","account","isConnected","getConnectedAddress","getChainId","getWallet","getPublicClient","getAccount","ensureConnected","ensureInitialized","BlockchainService","super","contractAddress","publicKey","consumeContractAddress","forwarderAddress","customRpcClient","http","rpcUrl","getWalletClient","ensureWalletConnected","ensureTokenAllowance","tokenAddress","spender","amount","currentAllowance","readContract","writeContract","getNonce","options","sendTransaction","to","value","toString","transaction","chain","id","undefined","hash","waitForTransactionReceipt","status","abi","functionName","args","timeout","result","Promise","race","_","reject","setTimeout","MerchantManager","generateMerchantId","merchantName","trim","merchantIdHex","stringToHex","merchantId","pad","size","checkOperatorPermission","operator","hasPermission","success","addOperator","txHash","checkMerchantAddress","setMerchantAddress","MerchantConfigManager","createMerchantConfig","promoTiersEnabled","promoTiers","length","discountEnabled","cashbackPointEnabled","cashbackVoucherEnabled","getMerchantConfig","discountBase","discountRate","cashbackPointBase","cashbackPointAmount","cashbackVoucherBase","cashbackVoucherAmount","voucherExpirePeriod","processedPromoTiers","Array","isArray","map","tier","minAmount","voucherAmount","pointAmount","merchantConfig","OperationType","RelayerService","validatePaymentRequest","params","token","gasFee","seq","from","maxAmount","minUnit","feePpm","specificFeePpm","fee","toAmount","validateConsumeRequest","voucherId","pointToUse","merchantRecipient","spendAmount","discountedAmount","voucherReward","pointsReward","voucherUsed","voucher","used","currentTimestamp","BigInt","Math","floor","Date","now","expireAt","includes","pointsUsed","userPoints","userBalance","feeAmount","merchantAmount","rewardAmount","validateDepositRequest","validateWithdrawRequest","encodePayCallData","encodeFunctionData","encodeConsumeCallData","encodeDepositCallData","encodeWithdrawCallData","validateSimpleRequest","validationResult","Payment","payParams","decodePaymentData","Consume","consumeParams","decodeConsumeData","Deposit","depositParams","decodeDepositData","Withdraw","withdrawParams","decodeWithdrawData","sendSimpleRequest","forwardRequest","gas","deadline","signature","functionSelector","slice","decoded","decodeFunctionData","String","Number","decodeError","payFunctionArguments","consumeFunctionArguments","depositFunctionArguments","withdrawFunctionArguments","SigningService","blockchainService","verifyTypedDataSignature","expectedSigner","domain","version","verifyingContract","signer","recoverTypedDataAddress","types","primaryType","valid","toLowerCase","signTypedData","nonce","safeRequest","viemError","typedDataForWallet","EIP712Domain","JSON","stringify","v4Error","TransactionService","signingService","approveToken","checkAllowance","owner","payData","userPayDirect","prepareRelayedPayment","deadlineSeconds","payCallData","userNonce","signError","depositToVault","withdrawFromVault","consumeFromVault","prepareRelayedConsume","consumeCallData","prepareRelayedDeposit","depositCallData","prepareRelayedWithdraw","withdrawCallData"],"mappings":"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"}