import{keccak256 as e,createWalletClient as t,custom as n,createPublicClient as a,http as r,stringToHex as s,pad as o,encodeFunctionData as i,decodeFunctionData as c,recoverTypedDataAddress as u}from"viem";const l="0x9fAb129F2a9CC1756772B73797ec4F37B86Ffc14",d=[{inputs:[{internalType:"address",name:"_trustedForwarder",type:"address"},{internalType:"address",name:"_feeReceiver",type:"address"},{internalType:"address",name:"_feeRuleProvider",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"SafeERC20FailedOperation",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"bytes32",name:"merchantId",type:"bytes32"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"originalAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"discountedAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pointsUsed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"voucherUsed",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pointsReward",type:"uint256"},{indexed:!1,internalType:"uint256",name:"voucherReward",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feePaid",type:"uint256"},{indexed:!1,internalType:"address",name:"merchantRecipient",type:"address"},{indexed:!1,internalType:"address",name:"feeReceiver",type:"address"},{indexed:!1,internalType:"uint256",name:"seq",type:"uint256"}],name:"Consumed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"merchantId",type:"bytes32"},{indexed:!1,internalType:"bool",name:"promoTiersEnabled",type:"bool"},{indexed:!1,internalType:"bool",name:"discountEnabled",type:"bool"},{indexed:!1,internalType:"uint256",name:"discountBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"discountRate",type:"uint256"},{indexed:!1,internalType:"bool",name:"cashbackPointEnabled",type:"bool"},{indexed:!1,internalType:"uint256",name:"cashbackPointBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"cashbackPointAmount",type:"uint256"},{indexed:!1,internalType:"bool",name:"cashbackVoucherEnabled",type:"bool"},{indexed:!1,internalType:"uint256",name:"cashbackVoucherBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"cashbackVoucherAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"voucherExpirePeriod",type:"uint256"}],name:"MerchantConfigUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"Operator",type:"address"},{indexed:!1,internalType:"bytes32",name:"merchantId",type:"bytes32"},{indexed:!1,internalType:"bool",name:"enable",type:"bool"}],name:"MerchantOperatorSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"merchantId",type:"bytes32"},{indexed:!1,internalType:"address",name:"recipient",type:"address"}],name:"MerchantRecipientsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"bytes32",name:"merchantId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PointsGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"bool",name:"status",type:"bool"}],name:"TokenWhitelistChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"voucherId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"merchantId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"expireAt",type:"uint256"}],name:"VoucherGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"},{inputs:[{internalType:"bytes32",name:"merchantId",type:"bytes32"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"voucherId",type:"uint256"},{internalType:"uint256",name:"pointToUse",type:"uint256"},{internalType:"uint256",name:"seq",type:"uint256"}],name:"consume",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"feeReceiver",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeRuleProvider",outputs:[{internalType:"contract IFeeRuleProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"merchantId",type:"bytes32"}],name:"getMerchantConfig",outputs:[{components:[{internalType:"bool",name:"promoTiersEnabled",type:"bool"},{components:[{internalType:"uint256",name:"minAmount",type:"uint256"},{internalType:"uint256",name:"discountRate",type:"uint256"},{internalType:"uint256",name:"voucherAmount",type:"uint256"},{internalType:"uint256",name:"pointAmount",type:"uint256"}],internalType:"struct UnifiedMerchantVault.PromoTier[]",name:"promoTiers",type:"tuple[]"},{internalType:"bool",name:"discountEnabled",type:"bool"},{internalType:"uint256",name:"discountBase",type:"uint256"},{internalType:"uint256",name:"discountRate",type:"uint256"},{internalType:"bool",name:"cashbackPointEnabled",type:"bool"},{internalType:"uint256",name:"cashbackPointBase",type:"uint256"},{internalType:"uint256",name:"cashbackPointAmount",type:"uint256"},{internalType:"bool",name:"cashbackVoucherEnabled",type:"bool"},{internalType:"uint256",name:"cashbackVoucherBase",type:"uint256"},{internalType:"uint256",name:"cashbackVoucherAmount",type:"uint256"},{internalType:"uint256",name:"voucherExpirePeriod",type:"uint256"}],internalType:"struct UnifiedMerchantVault.MerchantConfig",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"merchantId",type:"bytes32"}],name:"getMerchantPromoTiers",outputs:[{components:[{internalType:"uint256",name:"minAmount",type:"uint256"},{internalType:"uint256",name:"discountRate",type:"uint256"},{internalType:"uint256",name:"voucherAmount",type:"uint256"},{internalType:"uint256",name:"pointAmount",type:"uint256"}],internalType:"struct UnifiedMerchantVault.PromoTier[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getMyBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"merchantId",type:"bytes32"}],name:"getMyPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMyVouchers",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"bytes32[]",name:"",type:"bytes32[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"bool[]",name:"",type:"bool[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"getUserBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"bytes32",name:"merchantId",type:"bytes32"}],name:"getUserPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"vid",type:"uint256"}],name:"getVoucher",outputs:[{internalType:"bytes32",name:"merchantId",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"used",type:"bool"},{internalType:"uint256",name:"expireAt",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"bytes32",name:"merchantId",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"grantPoints",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"bytes32",name:"merchantId",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"expireAt",type:"uint256"}],name:"grantVoucher",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"merchantConfigs",outputs:[{internalType:"bool",name:"promoTiersEnabled",type:"bool"},{internalType:"bool",name:"discountEnabled",type:"bool"},{internalType:"uint256",name:"discountBase",type:"uint256"},{internalType:"uint256",name:"discountRate",type:"uint256"},{internalType:"bool",name:"cashbackPointEnabled",type:"bool"},{internalType:"uint256",name:"cashbackPointBase",type:"uint256"},{internalType:"uint256",name:"cashbackPointAmount",type:"uint256"},{internalType:"bool",name:"cashbackVoucherEnabled",type:"bool"},{internalType:"uint256",name:"cashbackVoucherBase",type:"uint256"},{internalType:"uint256",name:"cashbackVoucherAmount",type:"uint256"},{internalType:"uint256",name:"voucherExpirePeriod",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"merchantOperator",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"merchantRecipients",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextVoucherId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"merchantId",type:"bytes32"},{components:[{internalType:"bool",name:"promoTiersEnabled",type:"bool"},{components:[{internalType:"uint256",name:"minAmount",type:"uint256"},{internalType:"uint256",name:"discountRate",type:"uint256"},{internalType:"uint256",name:"voucherAmount",type:"uint256"},{internalType:"uint256",name:"pointAmount",type:"uint256"}],internalType:"struct UnifiedMerchantVault.PromoTier[]",name:"promoTiers",type:"tuple[]"},{internalType:"bool",name:"discountEnabled",type:"bool"},{internalType:"uint256",name:"discountBase",type:"uint256"},{internalType:"uint256",name:"discountRate",type:"uint256"},{internalType:"bool",name:"cashbackPointEnabled",type:"bool"},{internalType:"uint256",name:"cashbackPointBase",type:"uint256"},{internalType:"uint256",name:"cashbackPointAmount",type:"uint256"},{internalType:"bool",name:"cashbackVoucherEnabled",type:"bool"},{internalType:"uint256",name:"cashbackVoucherBase",type:"uint256"},{internalType:"uint256",name:"cashbackVoucherAmount",type:"uint256"},{internalType:"uint256",name:"voucherExpirePeriod",type:"uint256"}],internalType:"struct UnifiedMerchantVault.MerchantConfig",name:"config",type:"tuple"}],name:"setMerchantConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"Operator",type:"address"},{internalType:"bytes32",name:"merchantId",type:"bytes32"},{internalType:"bool",name:"enable",type:"bool"}],name:"setMerchantOperator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"merchantId",type:"bytes32"},{internalType:"address",name:"recipient",type:"address"}],name:"setMerchantRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"bool",name:"status",type:"bool"}],name:"setTokenWhitelist",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"setTrustedForwarder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokenWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"trustedForwarder",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"usedSeq",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"userBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"userPoints",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"userVouchers",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"vouchers",outputs:[{internalType:"bytes32",name:"merchantId",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"used",type:"bool"},{internalType:"uint256",name:"expireAt",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}],p="0xA03337a0CFa75f2ED53b2b5cb5E5cF22819De6dA",y=[{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"address",name:"_feeAddress",type:"address"},{internalType:"uint256",name:"_feePpm",type:"uint256"},{internalType:"address",name:"trustedForwarder",type:"address"},{internalType:"address[]",name:"initialTokens",type:"address[]"},{internalType:"uint256[]",name:"initialMinUnits",type:"uint256[]"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"SafeERC20FailedOperation",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"fee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"toAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"seq",type:"uint256"}],name:"Paid",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"bool",name:"isWhitelisted",type:"bool"}],name:"TokenWhitelistUpdated",type:"event"},{inputs:[],name:"MAX_AMOUNT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"feePpm",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"feePpmPerTo",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"isTokenWhitelisted",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"minUnitPerToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"seq",type:"uint256"}],name:"pay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_feePpm",type:"uint256"}],name:"setFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_feeAddress",type:"address"}],name:"setFeeAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"newFeePpm",type:"uint256"}],name:"setFeePpmForTo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"minUnit",type:"uint256"}],name:"setMinUnit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"bool",name:"allowed",type:"bool"}],name:"setTokenWhitelist",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokenWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"trustedForwarder",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"usedSeq",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],m=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"uint48",name:"deadline",type:"uint48"}],name:"ERC2771ForwarderExpiredRequest",type:"error"},{inputs:[{internalType:"address",name:"signer",type:"address"},{internalType:"address",name:"from",type:"address"}],name:"ERC2771ForwarderInvalidSigner",type:"error"},{inputs:[{internalType:"uint256",name:"requestedValue",type:"uint256"},{internalType:"uint256",name:"msgValue",type:"uint256"}],name:"ERC2771ForwarderMismatchedValue",type:"error"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"address",name:"forwarder",type:"address"}],name:"ERC2771UntrustfulTarget",type:"error"},{inputs:[],name:"FailedCall",type:"error"},{inputs:[{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"}],name:"InsufficientBalance",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"currentNonce",type:"uint256"}],name:"InvalidAccountNonce",type:"error"},{inputs:[],name:"InvalidShortString",type:"error"},{inputs:[{internalType:"string",name:"str",type:"string"}],name:"StringTooLong",type:"error"},{anonymous:!1,inputs:[],name:"EIP712DomainChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"bool",name:"success",type:"bool"}],name:"ExecutedForwardRequest",type:"event"},{inputs:[],name:"eip712Domain",outputs:[{internalType:"bytes1",name:"fields",type:"bytes1"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"version",type:"string"},{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"address",name:"verifyingContract",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256[]",name:"extensions",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"gas",type:"uint256"},{internalType:"uint48",name:"deadline",type:"uint48"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct ERC2771Forwarder.ForwardRequestData",name:"request",type:"tuple"}],name:"execute",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"gas",type:"uint256"},{internalType:"uint48",name:"deadline",type:"uint48"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct ERC2771Forwarder.ForwardRequestData[]",name:"requests",type:"tuple[]"},{internalType:"address payable",name:"refundReceiver",type:"address"}],name:"executeBatch",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"gas",type:"uint256"},{internalType:"uint48",name:"deadline",type:"uint48"},{internalType:"bytes",name:"data",type:"bytes"}],name:"getDigest",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"gas",type:"uint256"},{internalType:"uint48",name:"deadline",type:"uint48"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct ERC2771Forwarder.ForwardRequestData",name:"request",type:"tuple"}],name:"verify",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],h="0xC109B607A2228FF55b6341F0b926b3aE7FDe964c";e("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"),e("ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)");const g=[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],b={ForwardRequest:[{name:"from",type:"address"},{name:"to",type:"address"},{name:"value",type:"uint256"},{name:"gas",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint48"},{name:"data",type:"bytes"}]},T=[{inputs:[{type:"address",name:"to"},{type:"uint256",name:"amount"}],name:"transfer",outputs:[{type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{type:"address",name:"owner"},{type:"address",name:"spender"}],name:"allowance",outputs:[{type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{type:"address",name:"spender"},{type:"uint256",name:"amount"}],name:"approve",outputs:[{type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{type:"address",name:"account"}],name:"balanceOf",outputs:[{type:"uint256"}],stateMutability:"view",type:"function"}],w="undefined"!=typeof window;class f{constructor(e){this.config=e}async initializeClients(){if(console.log("开始初始化钱包客户端..."),!this.config.useMetaMask)throw console.warn("需要使用浏览器钱包，请设置 useMetaMask 为 true"),new Error("需要使用浏览器钱包");{if(console.log("尝试使用钱包..."),!w)throw new Error("钱包只能在浏览器环境中使用");const e=w&&(window.ethereum||window.walletLinkExtension||window.walletConnect||window.coinbaseWalletExtension)||null;if(!e)throw console.error("未检测到可用的钱包"),new Error("未检测到可用的钱包。请安装MetaMask、Coinbase Wallet或其他以太坊钱包。");console.log("检测到钱包提供者，创建钱包客户端...");try{const r=await e.request({method:"eth_chainId"});return this.chainId=parseInt(r,16),console.log("从钱包获取到链 ID:",this.chainId),this.wallet=t({transport:n(e)}),console.log("钱包客户端创建完成"),this.publicClient=a({transport:n(e)}),console.log("公共客户端创建完成"),!0}catch(e){throw console.error("初始化客户端失败:",e),console.error("错误详情:",{message:e.message,code:e.code,data:e.data}),new Error(`初始化客户端失败: ${e.message}`)}}}async connectWallet(){if(!this.config.useMetaMask)throw new Error("需要使用浏览器钱包");this.wallet&&this.publicClient||await this.initializeClients();try{console.log("请求连接钱包...");const[e]=await this.wallet.requestAddresses();return console.log("获取到钱包地址:",e),this.account={address:e,type:"json-rpc"},e}catch(e){throw console.error("连接钱包失败:",e),new Error(`连接钱包失败: ${e.message}`)}}isConnected(){return!!this.account}getConnectedAddress(){return this.account?.address}getChainId(){return this.chainId}getWallet(){return this.wallet}getPublicClient(){return this.publicClient}getAccount(){return this.account}async ensureConnected(){return this.isConnected()||await this.connectWallet(),this.isConnected()}async ensureInitialized(){return this.publicClient&&this.wallet||await this.initializeClients(),!!this.publicClient&&!!this.wallet}}class v extends f{constructor(e={useMetaMask:!0}){super({useMetaMask:e.useMetaMask,contractAddress:e.contractAddress||p,publicKey:e.publicKey||"",consumeContractAddress:e.consumeContractAddress,forwarderAddress:e.forwarderAddress}),this.customRpcClient=a({transport:r(e.rpcUrl||"http://192.168.6.233:8545")})}getWalletClient(){return this.wallet}getAccount(){return this.account}async ensureWalletConnected(){await this.ensureConnected()}async ensureTokenAllowance(e,t,n){await this.ensureWalletConnected();const a=await this.readContract(e,T,"allowance",[this.account.address,t]);return console.log(`当前allowance: ${a} 需要: ${n}`),a>=n?(console.log("授权额度充足"),!0):(console.log("授权额度不足，发起approve..."),await this.writeContract(e,T,"approve",[t,n]),console.log("approve成功"),!0)}async getNonce(e,t){try{return await this.readContract(h,m,"nonces",[e],t)}catch(e){throw e}}async sendTransaction(e,t,n){await this.ensureWalletConnected(),console.log("发送交易..."),console.log("- 发送方:",this.account.address),console.log("- 接收方:",e),console.log("- 金额:",t.toString());const a={account:this.account,chain:this.chainId?{id:this.chainId}:void 0,to:e,value:t,data:n};try{const e=await this.wallet.sendTransaction(a);console.log("交易已发送，等待确认，哈希:",e);if("success"!==(await this.publicClient.waitForTransactionReceipt({hash:e})).status)throw new Error("交易执行失败");return console.log("交易已确认"),e}catch(e){throw console.error("发送交易失败:",e),new Error(`发送交易失败: ${e.message}`)}}async writeContract(e,t,n,a,r=0n){await this.ensureWalletConnected(),console.log("调用合约写方法..."),console.log("- 合约地址:",e),console.log("- 函数名:",n),console.log("- 参数:",a);try{const s=await this.wallet.writeContract({account:this.account,chain:this.chainId?{id:this.chainId}:void 0,address:e,abi:t,functionName:n,args:a,value:r});console.log("合约调用已发送，等待确认，哈希:",s);if("success"!==(await this.publicClient.waitForTransactionReceipt({hash:s})).status)throw new Error("合约调用执行失败");return console.log("合约调用已确认"),s}catch(e){throw console.error("调用合约写方法失败:",e),new Error(`调用合约写方法失败: ${e.message}`)}}async readContract(e,t,n,a=[],r){const s=r?.timeout??1e4;console.log("调用合约读方法..."),console.log("- 合约地址:",e),console.log("- 函数名:",n),console.log("- 参数:",a);try{const r=await Promise.race([this.customRpcClient.readContract({address:e,abi:t,functionName:n,args:a}),new Promise(((e,t)=>setTimeout((()=>t(new Error("TimeoutError: readContract timeout"))),s)))]);return console.log("合约读取结果:",r),r}catch(e){throw console.error("调用合约读方法失败:",e),new Error(`调用合约读方法失败: ${e.message}`)}}}class C extends v{constructor(e){super(e),this.contractAddress=e.contractAddress}generateMerchantId(e){if(!e||""===e.trim())throw new Error("商户名称不能为空");const t=s(e),n=o(t,{size:32});return console.log("生成的merchantId:",n),n}async checkOperatorPermission(e,t){try{await this.ensureWalletConnected(),console.log("检查操作员权限..."),console.log("- 商户ID:",e),console.log("- 操作员:",t);const n=await this.readContract(this.contractAddress,d,"merchantOperator",[t,e]);return{success:!0,message:n?"操作员有权限":"操作员无权限",data:n}}catch(e){return console.error("检查操作员权限失败:",e),{success:!1,message:`检查操作员权限失败: ${e.message}`}}}async addOperator(e,t){try{await this.ensureWalletConnected(),console.log("添加操作员..."),console.log("- 商户ID:",e),console.log("- 操作员:",t);const n=await this.writeContract(this.contractAddress,d,"setMerchantOperator",[t,e,!0]);return console.log("交易已发送，哈希:",n),{success:!0,message:"添加操作员交易已发送",data:{txHash:n}}}catch(e){return console.error("添加操作员失败:",e),{success:!1,message:`添加操作员失败: ${e.message}`}}}async checkMerchantAddress(e){try{await this.ensureWalletConnected(),console.log("检查商家收款地址..."),console.log("- 商户ID:",e);const t=await this.readContract(this.contractAddress,d,"merchantRecipients",[e]);return"0x0000000000000000000000000000000000000000"===t?{success:!1,message:"商家收款地址未设置",data:null}:{success:!0,message:"获取到商家收款地址",data:t}}catch(e){return console.error("检查商家收款地址失败:",e),{success:!1,message:`检查商家收款地址失败: ${e.message}`}}}async setMerchantAddress(e,t){try{await this.ensureWalletConnected(),console.log("设置商家收款地址..."),console.log("- 商户ID:",e),console.log("- 收款地址:",t);const n=await this.writeContract(this.contractAddress,d,"setMerchantRecipient",[e,t]);return console.log("交易已发送，哈希:",n),{success:!0,message:"设置商家收款地址交易已发送",data:{txHash:n}}}catch(e){return console.error("设置商家收款地址失败:",e),{success:!1,message:`设置商家收款地址失败: ${e.message}`}}}}class k extends v{constructor(e){super(e),this.contractAddress=e.contractAddress}async createMerchantConfig(e,t){try{await this.ensureWalletConnected(),console.log("设置商户配置..."),console.log("- 商户ID:",e),console.log("- 促销分档启用:",t.promoTiersEnabled),console.log("- 促销分档数量:",t.promoTiers.length),console.log("- 折扣启用:",t.discountEnabled),console.log("- 返积分启用:",t.cashbackPointEnabled),console.log("- 返券启用:",t.cashbackVoucherEnabled);const n=await this.writeContract(this.contractAddress,d,"setMerchantConfig",[e,t]);return console.log("交易已发送，哈希:",n),{success:!0,message:"设置商户配置交易已发送",data:{txHash:n}}}catch(e){return console.error("设置商户配置失败:",e),{success:!1,message:`设置商户配置失败: ${e.message}`}}}async getMerchantConfig(e){try{await this.ensureWalletConnected(),console.log("获取商户配置..."),console.log("- 商户ID:",e);const t=await this.readContract(this.contractAddress,d,"getMerchantConfig",[e]);if(console.log("获取到的商户配置原始数据:",t),!t)throw new Error(`商户 ${e} 不存在或未配置`);let n=[];try{n=await this.readContract(this.contractAddress,d,"getMerchantPromoTiers",[e]),console.log("获取到的促销分档数据:",n)}catch(e){console.warn("获取促销分档失败，使用空数组:",e)}const a=void 0!==t.discountBase?t.discountBase:0n,r=void 0!==t.discountRate?t.discountRate:100n,s=void 0!==t.cashbackPointBase?t.cashbackPointBase:0n,o=void 0!==t.cashbackPointAmount?t.cashbackPointAmount:0n,i=void 0!==t.cashbackVoucherBase?t.cashbackVoucherBase:0n,c=void 0!==t.cashbackVoucherAmount?t.cashbackVoucherAmount:0n,u=void 0!==t.voucherExpirePeriod?t.voucherExpirePeriod:0n,l=Array.isArray(n)?n.map((e=>({minAmount:e.minAmount?e.minAmount.toString():"0",discountRate:e.discountRate?e.discountRate.toString():"100",voucherAmount:e.voucherAmount?e.voucherAmount.toString():"0",pointAmount:e.pointAmount?e.pointAmount.toString():"0"}))):[],p={promoTiersEnabled:t.promoTiersEnabled||!1,promoTiers:l,discountEnabled:t.discountEnabled||!1,discountBase:a.toString(),discountRate:r.toString(),cashbackPointEnabled:t.cashbackPointEnabled||!1,cashbackPointBase:s.toString(),cashbackPointAmount:o.toString(),cashbackVoucherEnabled:t.cashbackVoucherEnabled||!1,cashbackVoucherBase:i.toString(),cashbackVoucherAmount:c.toString(),voucherExpirePeriod:u.toString()};return console.log("处理后的商户配置数据(字符串化):",p),{success:!0,message:"获取商户配置成功",data:p}}catch(e){return console.error("获取商户配置失败:",e),{success:!1,message:`获取商户配置失败: ${e.message}`}}}}var A;!function(e){e.Payment="payment",e.Consume="consume",e.Deposit="deposit",e.Withdraw="withdraw"}(A||(A={}));class M extends v{constructor(e){super(e),this.paymentContractAddress=e.contractAddress||p,this.consumeContractAddress=e.consumeContractAddress||e.contractAddress||l,this.forwarderAddress=e.forwarderAddress||h}async validatePaymentRequest(e){try{await this.ensureWalletConnected();const{token:t,to:n,amount:a,gasFee:r,seq:s,from:o}=e;if(console.log("验证支付请求..."),console.log("- 代币:",t),console.log("- 接收方:",n),console.log("- 金额:",a.toString()),console.log("- Gas费:",r.toString()),console.log("- 序列号:",s.toString()),console.log("- 发送方:",o),a<=0n)return console.error("金额必须大于0"),{success:!1,error:"金额必须大于0"};try{if(await this.readContract(this.paymentContractAddress,y,"usedSeq",[s]))return console.error("序列号已被使用"),{success:!1,error:"序列号已被使用"}}catch(e){return console.error("检查序列号失败:",e),{success:!1,error:`检查序列号失败: ${e.message}`}}try{if(!await this.readContract(this.paymentContractAddress,y,"tokenWhitelist",[t]))return console.error("代币不在白名单中"),{success:!1,error:"代币不在白名单中"}}catch(e){return console.error("检查代币白名单失败:",e),{success:!1,error:`检查代币白名单失败: ${e.message}`}}try{const e=await this.readContract(this.paymentContractAddress,y,"MAX_AMOUNT",[]);if(a>e)return console.error("金额超过最大限制"),{success:!1,error:`金额超过最大限制: ${e}`}}catch(e){return console.error("检查最大金额限制失败:",e),{success:!1,error:`检查最大金额限制失败: ${e.message}`}}try{if("0x0000000000000000000000000000000000000000"===await this.readContract(this.paymentContractAddress,y,"feeAddress",[]))return console.error("手续费地址未设置"),{success:!1,error:"手续费地址未设置"}}catch(e){return console.error("检查手续费地址失败:",e),{success:!1,error:`检查手续费地址失败: ${e.message}`}}let i,c;try{if(i=await this.readContract(this.paymentContractAddress,y,"minUnitPerToken",[t]),i<=0n)return console.error("代币最小单位未设置"),{success:!1,error:"代币最小单位未设置"};if(a<i)return console.error("金额低于最小单位"),{success:!1,error:`金额低于最小单位: ${i}`};if(a%i!==0n)return console.error("金额必须是最小单位的整数倍"),{success:!1,error:`金额必须是最小单位的整数倍: ${i}`}}catch(e){return console.error("检查最小单位失败:",e),{success:!1,error:`检查最小单位失败: ${e.message}`}}try{const e=await this.readContract(this.paymentContractAddress,y,"feePpmPerTo",[n]);if(c=e>0n?e:await this.readContract(this.paymentContractAddress,y,"feePpm",[]),c>=1000000n)return console.error("费率无效"),{success:!1,error:"费率无效"}}catch(e){return console.error("获取手续费率失败:",e),{success:!1,error:`获取手续费率失败: ${e.message}`}}const u=a*c/1000000n;if(u>=a)return console.error("手续费过高"),{success:!1,error:"手续费过高"};const l=a-u;return l<=0n?(console.error("接收方到账金额过低"),{success:!1,error:"接收方到账金额过低"}):(console.log("验证通过"),console.log("- 手续费率:",c.toString(),"ppm"),console.log("- 手续费:",u.toString()),console.log("- 实际到账:",l.toString()),{success:!0,fee:u,toAmount:l})}catch(e){return console.error("验证支付请求失败:",e),{success:!1,error:`验证支付请求失败: ${e.message}`}}}async validateConsumeRequest(e){try{await this.ensureWalletConnected();const{token:t,merchantId:n,amount:a,seq:r,from:s,voucherId:o=0n,pointToUse:i=0n}=e;let c,u;console.log("验证消费请求..."),console.log("- 商家ID:",n),console.log("- 代币:",t),console.log("- 金额:",a.toString()),console.log("- 序列号:",r.toString()),console.log("- 发送方:",s),o>0n&&console.log("- 代金券ID:",o.toString()),i>0n&&console.log("- 使用积分:",i.toString());try{if(c=await this.readContract(this.consumeContractAddress,d,"merchantRecipients",[n]),"0x0000000000000000000000000000000000000000"===c)return console.error("商家未设置"),{success:!1,error:"商家未设置"}}catch(e){return console.error("检查商家设置失败:",e),{success:!1,error:`检查商家设置失败: ${e.message}`}}try{if(!await this.readContract(this.consumeContractAddress,d,"tokenWhitelist",[t]))return console.error("代币不在白名单中"),{success:!1,error:"代币不在白名单中"}}catch(e){return console.error("检查代币白名单失败:",e),{success:!1,error:`检查代币白名单失败: ${e.message}`}}if(a<=0n)return console.error("金额必须大于0"),{success:!1,error:"金额必须大于0"};try{if(await this.readContract(this.consumeContractAddress,d,"usedSeq",[r]))return console.error("序列号已被使用"),{success:!1,error:"序列号已被使用"}}catch(e){return console.error("检查序列号失败:",e),{success:!1,error:`检查序列号失败: ${e.message}`}}try{u=await this.readContract(this.consumeContractAddress,d,"merchantConfigs",[n])}catch(e){return console.error("获取商家配置失败:",e),{success:!1,error:`获取商家配置失败: ${e.message}`}}let l=a,p=a,y=0n,m=0n;u.discountEnabled&&a>=u.discountBase&&(l=a*u.discountRate/100n,p=l,console.log("应用折扣:",u.discountRate.toString(),"%"),console.log("折扣后金额:",l.toString()));let h=0n;if(0n!==o)try{const e=await this.readContract(this.consumeContractAddress,d,"vouchers",[o]);if(e.used)return console.error("代金券已使用"),{success:!1,error:"代金券已使用"};if(e.merchantId!==n)return console.error("代金券不属于该商家"),{success:!1,error:"代金券不属于该商家"};const t=BigInt(Math.floor(Date.now()/1e3));if(e.expireAt<=t)return console.error("代金券已过期"),{success:!1,error:"代金券已过期"};if(!(await this.readContract(this.consumeContractAddress,d,"userVouchers",[s])).includes(o))return console.error("不是代金券所有者"),{success:!1,error:"不是代金券所有者"};h=e.amount,l=l>h?l-h:0n,console.log("✅ 验证通过：代金券有效"),console.log("- 代金券抵扣金额:",h.toString()),console.log("- 抵扣后金额:",l.toString())}catch(e){return console.error("验证代金券失败:",e),{success:!1,error:`验证代金券失败: ${e.message}`}}let g=0n;if(i>0n)try{const e=await this.readContract(this.consumeContractAddress,d,"userPoints",[s,n]);g=i>e?e:i,g>l&&(g=l),l-=g,console.log("- 可用积分:",e.toString()),console.log("- 使用积分:",g.toString()),console.log("- 积分抵扣后金额:",l.toString())}catch(e){return console.error("验证积分失败:",e),{success:!1,error:`验证积分失败: ${e.message}`}}try{const e=await this.readContract(this.consumeContractAddress,d,"userBalances",[s,t]);if(e<l)return console.error("余额不足"),console.error("- 用户余额:",e.toString()),console.error("- 需要金额:",l.toString()),{success:!1,error:"余额不足"};console.log("- 用户余额:",e.toString()),console.log("- 需要金额:",l.toString())}catch(e){return console.error("检查用户余额失败:",e),{success:!1,error:`检查用户余额失败: ${e.message}`}}try{const e=10000n;if(e>=1000000n)return console.error("费率过高"),{success:!1,error:"费率过高"};const t=l*e/1000000n,n=l-t;return n<=0n&&t<=0n?(console.error("没有可转账的金额"),{success:!1,error:"没有可转账的金额"}):(u.cashbackPointEnabled&&a>=u.cashbackPointBase&&(m=u.cashbackPointAmount),u.cashbackVoucherEnabled&&a>=u.cashbackVoucherBase&&(y=u.cashbackVoucherAmount),console.log("验证通过"),console.log("- 原始金额:",a.toString()),console.log("- 折扣后金额:",p.toString()),console.log("- 代金券抵扣:",h.toString()),console.log("- 积分抵扣:",g.toString()),console.log("- 实际扣除金额:",l.toString()),console.log("- 手续费率:",e.toString(),"ppm"),console.log("- 手续费:",t.toString()),console.log("- 商家到账金额:",n.toString()),console.log("- 返积分:",m.toString()),console.log("- 返券金额:",y.toString()),{success:!0,fee:t,merchantAmount:n,rewardAmount:m,voucherReward:y,discountedAmount:p,pointsUsed:g,voucherUsed:h,spendAmount:l})}catch(e){return console.error("计算手续费和奖励失败:",e),{success:!1,error:`计算手续费和奖励失败: ${e.message}`}}}catch(e){return console.error("验证消费请求失败:",e),{success:!1,error:`验证消费请求失败: ${e.message}`}}}async validateDepositRequest(e){try{await this.ensureWalletConnected();const{token:t,amount:n,seq:a,from:r}=e;console.log("验证存款请求..."),console.log("- 代币:",t),console.log("- 金额:",n.toString()),console.log("- 序列号:",a.toString()),console.log("- 发送方:",r);try{if(!await this.readContract(this.consumeContractAddress,d,"tokenWhitelist",[t]))return console.error("代币不在白名单中"),{success:!1,error:"代币不在白名单中"}}catch(e){return console.error("检查代币白名单失败:",e),{success:!1,error:`检查代币白名单失败: ${e.message}`}}if(n<=0n)return console.error("金额必须大于0"),{success:!1,error:"金额必须大于0"};try{if(await this.readContract(t,T,"balanceOf",[r])<n)return console.error("代币余额不足"),{success:!1,error:"代币余额不足"};if(await this.readContract(t,T,"allowance",[r,this.consumeContractAddress])<n)return console.error("代币授权不足"),{success:!1,error:"代币授权不足"}}catch(e){return console.error("检查代币余额和授权失败:",e),{success:!1,error:`检查代币余额和授权失败: ${e.message}`}}return console.log("验证通过"),{success:!0}}catch(e){return console.error("验证存款请求失败:",e),{success:!1,error:`验证存款请求失败: ${e.message}`}}}async validateWithdrawRequest(e){try{await this.ensureWalletConnected();const{token:t,amount:n,seq:a,from:r}=e;console.log("验证提款请求..."),console.log("- 代币:",t),console.log("- 金额:",n.toString()),console.log("- 序列号:",a.toString()),console.log("- 发送方:",r);try{const e=await this.readContract(this.consumeContractAddress,d,"userBalances",[r,t]);if(e<n)return console.error("余额不足"),console.error("- 用户余额:",e.toString()),console.error("- 提款金额:",n.toString()),{success:!1,error:"余额不足"};console.log("- 用户余额:",e.toString()),console.log("- 提款金额:",n.toString())}catch(e){return console.error("检查用户余额失败:",e),{success:!1,error:`检查用户余额失败: ${e.message}`}}return console.log("验证通过"),{success:!0}}catch(e){return console.error("验证提款请求失败:",e),{success:!1,error:`验证提款请求失败: ${e.message}`}}}encodePayCallData(e,t,n,a){return i({abi:y,functionName:"pay",args:[e,t,n,a]})}encodeConsumeCallData(e,t,n,a,r,s){return i({abi:d,functionName:"consume",args:[e,t,n,a,r,s]})}encodeDepositCallData(e,t){return i({abi:d,functionName:"deposit",args:[e,t]})}encodeWithdrawCallData(e,t){return i({abi:d,functionName:"withdraw",args:[e,t]})}async getNonce(e,t){try{return await this.readContract(this.forwarderAddress,m,"nonces",[e],t)}catch(e){throw console.error("获取nonce失败:",e),new Error(`获取nonce失败: ${e.message}`)}}async validateSimpleRequest(e,t){try{let n;if(console.log(`解析并验证 ${e} 请求...`),console.log("- 调用数据:",t.data),e===A.Payment){const e=this.decodePaymentData(t.data);n=await this.validatePaymentRequest({token:e.token,to:e.to,amount:e.amount,gasFee:e.gasFee||0n,seq:e.seq,from:t.from})}else if(e===A.Consume){const e=this.decodeConsumeData(t.data);n=await this.validateConsumeRequest({token:e.token,merchantId:e.merchantId,amount:e.amount,seq:e.seq,from:t.from,voucherId:e.voucherId,pointToUse:e.pointToUse})}else if(e===A.Deposit){const e=this.decodeDepositData(t.data);n=await this.validateDepositRequest({token:e.token,amount:e.amount,seq:0n,from:t.from})}else{if(e!==A.Withdraw)throw new Error(`不支持的操作类型: ${e}`);{const e=this.decodeWithdrawData(t.data);n=await this.validateWithdrawRequest({token:e.token,amount:e.amount,seq:0n,from:t.from})}}return n}catch(e){return console.error("解析和验证请求失败:",e),{success:!1,error:`解析和验证请求失败: ${e.message}`}}}async sendSimpleRequest(e,t){try{await this.ensureWalletConnected();const n={from:t.from,to:t.to,value:BigInt(t.value||"0"),gas:BigInt(t.gas||"500000"),deadline:BigInt(t.deadline),data:t.data,signature:t.signature};console.log("发送转发请求..."),console.log("- 类型:",e),console.log("- 发送方:",t.from),console.log("- 目标合约:",t.to),console.log("- 截止时间:",t.deadline);const a=await this.writeContract(this.forwarderAddress,m,"execute",[n]);return console.log("交易已发送，哈希:",a),{success:!0,txHash:a}}catch(e){return console.error("发送请求失败:",e),{success:!1,error:`发送请求失败: ${e.message}`}}}decodePaymentData(e){try{const t=e.slice(0,10);if("0xa4b072d0"===t){console.log("检测到 pay 函数调用，解析参数...");try{const t=c({abi:y,data:e});if("pay"===t.functionName&&t.args&&Array.isArray(t.args)){const e=void 0!==t.args[0]?String(t.args[0]):"",n=void 0!==t.args[1]?String(t.args[1]):"",a=void 0!==t.args[2]?BigInt(Number(t.args[2])):0n;return{token:e,to:n,amount:a,seq:void 0!==t.args[3]?BigInt(Number(t.args[3])):0n}}}catch(e){console.log("使用viem解码失败，尝试手动解析:",e)}const t=e.slice(10),n="0x"+t.slice(0,64).slice(-40),a="0x"+t.slice(64,128).slice(-40),r=BigInt("0x"+t.slice(128,192));return{token:n,to:a,amount:r,seq:BigInt("0x"+t.slice(192,256))}}throw new Error(`未知的函数选择器: ${t}`)}catch(e){throw console.error("解析支付数据失败:",e),new Error(`解析支付数据失败: ${e.message}`)}}decodeConsumeData(e){try{const t=e.slice(0,10);if("0x5d495aea"===t){console.log("检测到 consume 函数调用，解析参数...");try{const t=c({abi:d,data:e});if("consume"===t.functionName&&t.args&&Array.isArray(t.args)){const e=void 0!==t.args[0]?String(t.args[0]):"",n=void 0!==t.args[1]?String(t.args[1]):"",a=void 0!==t.args[2]?BigInt(Number(t.args[2])):0n,r=void 0!==t.args[3]?BigInt(Number(t.args[3])):0n,s=void 0!==t.args[4]?BigInt(Number(t.args[4])):0n;return{merchantId:e,token:n,amount:a,voucherId:r,pointToUse:s,seq:void 0!==t.args[5]?BigInt(Number(t.args[5])):0n}}}catch(e){console.log("使用viem解码失败，尝试手动解析:",e)}const t=e.slice(10),n="0x"+t.slice(0,64).slice(-40),a="0x"+t.slice(64,128).slice(-40),r=BigInt("0x"+t.slice(128,192)),s=BigInt("0x"+t.slice(192,256)),o=BigInt("0x"+t.slice(256,320));return{merchantId:n,token:a,amount:r,voucherId:s,pointToUse:o,seq:BigInt("0x"+t.slice(320,384))}}throw new Error(`未知的函数选择器: ${t}`)}catch(e){throw console.error("解析消费数据失败:",e),new Error(`解析消费数据失败: ${e.message}`)}}decodeDepositData(e){try{const t=e.slice(0,10);if("0x47e7ef24"===t){console.log("检测到 deposit 函数调用，解析参数...");try{const t=c({abi:d,data:e});if("deposit"===t.functionName&&t.args&&Array.isArray(t.args)){const e=void 0!==t.args[0]?String(t.args[0]):"";return{token:e,amount:void 0!==t.args[1]?BigInt(Number(t.args[1])):0n}}}catch(e){console.log("使用viem解码失败，尝试手动解析:",e)}const t=e.slice(10),n="0x"+t.slice(0,64).slice(-40);return{token:n,amount:BigInt("0x"+t.slice(64,128))}}throw new Error(`未知的函数选择器: ${t}`)}catch(e){throw console.error("解析存款数据失败:",e),new Error(`解析存款数据失败: ${e.message}`)}}decodeWithdrawData(e){try{const t=e.slice(0,10);if("0x441a3e70"===t){console.log("检测到 withdraw 函数调用，解析参数...");try{const t=c({abi:d,data:e});if("withdraw"===t.functionName&&t.args&&Array.isArray(t.args)){const e=void 0!==t.args[0]?String(t.args[0]):"";return{token:e,amount:void 0!==t.args[1]?BigInt(Number(t.args[1])):0n}}}catch(e){console.log("使用viem解码失败，尝试手动解析:",e)}const t=e.slice(10),n="0x"+t.slice(0,64).slice(-40);return{token:n,amount:BigInt("0x"+t.slice(64,128))}}throw new Error(`未知的函数选择器: ${t}`)}catch(e){throw console.error("解析提款数据失败:",e),new Error(`解析提款数据失败: ${e.message}`)}}}const S="undefined"!=typeof window;class x{constructor(e){this.blockchainService=e}async verifyTypedDataSignature({chainId:e,message:t,signature:n,expectedSigner:a}){const r={name:"MetaTxForwarder",version:"1",chainId:e,verifyingContract:h},s=await u({domain:r,types:b,primaryType:"ForwardRequest",message:t,signature:n});return{valid:s.toLowerCase()===a.toLowerCase(),signer:s}}async signTypedData(e,t,n){console.log("开始签名过程，参数:"),console.log("- 账户地址:",e.from),console.log("- 链 ID:",t),console.log("- Nonce:",n.toString());const a={name:"MetaTxForwarder",version:"1",chainId:t,verifyingContract:h},r={from:e.from,to:e.to,value:e.value.toString(),gas:e.gas.toString(),nonce:e.nonce.toString(),deadline:e.deadline.toString(),data:e.data};try{const n=this.blockchainService.getWalletClient(),s=this.blockchainService.getAccount();if(!n||!s)throw new Error("钱包未连接或初始化失败");if(n.signTypedData){console.log("使用 viem 钱包客户端签名...");try{const e=await n.signTypedData({account:s,domain:a,types:{...b},primaryType:"ForwardRequest",message:r});return console.log("viem 签名成功:",e),e}catch(e){console.warn("viem 签名失败，回退到原生方法:",e.message)}}if(!S||!window.ethereum)throw new Error("浏览器环境不可用或未安装钱包");console.log("使用浏览器原生签名方法...");const o={domain:{...a,chainId:a.chainId.toString()},message:r,primaryType:"ForwardRequest",types:{EIP712Domain:g,...b}};let i;try{i=await window.ethereum.request({method:"eth_signTypedData_v4",params:[e.from,JSON.stringify(o)]})}catch(t){console.warn("eth_signTypedData_v4 失败，尝试 eth_signTypedData_v3"),i=await window.ethereum.request({method:"eth_signTypedData_v3",params:[e.from,JSON.stringify(o)]})}const{valid:c,signer:u}=await this.verifyTypedDataSignature({chainId:t,message:r,signature:i,expectedSigner:e.from});if(console.log("签名验证：",c,u),!c)throw new Error("签名验证失败");return console.log("签名成功:",i),i}catch(e){throw console.error("签名过程中出错:",e),new Error(`签名失败: ${e.message}`)}}}class I{constructor(e){this.blockchainService=e,this.signingService=new x(e)}async approveToken(e,t,n){return await this.blockchainService.ensureTokenAllowance(e,t,n),"0x"}async checkAllowance(e,t,n){return await this.blockchainService.readContract(e,T,"allowance",[t,n])}encodePayCallData(e,t,n,a=0n){const r=i({abi:y,functionName:"pay",args:[e,t,n,a]});return console.log("编码 pay 调用参数:"),console.log("- token:",e),console.log("- to:",t),console.log("- amount:",n.toString()),console.log("- seq:",a.toString()),r}async userPayDirect(e,t,n,a=BigInt(Math.floor(Date.now()/1e3))){return await this.blockchainService.writeContract(p,y,"pay",[n||"0x0000000000000000000000000000000000000000",e,t,a],n?0n:t)}async prepareRelayedPayment(e,t,n,a=BigInt(Math.floor(Date.now()/1e3)),r=3600){await this.blockchainService.ensureWalletConnected();const s=this.blockchainService.getAccount(),o=this.blockchainService.getChainId();if(!s||void 0===o)throw new Error("钱包未连接或初始化失败");n&&await this.blockchainService.ensureTokenAllowance(n,p,t);const i=this.encodePayCallData(n||"0x0000000000000000000000000000000000000000",e,t,a),c=Math.floor(Date.now()/1e3)+r,u=await this.blockchainService.getNonce(s.address),l={from:s.address,to:p,value:n?"0":t.toString(),gas:"3000000",nonce:u.toString(),deadline:c.toString(),data:i};try{const e=await this.signingService.signTypedData(l,o,u);return{...l,signature:e}}catch(e){throw console.error("生成签名失败:",e),new Error(`生成签名失败: ${e.message}`)}}async depositToVault(e,t){return await this.blockchainService.ensureTokenAllowance(e,l,t),await this.blockchainService.writeContract(l,d,"deposit",[e,t])}async withdrawFromVault(e,t){return await this.blockchainService.writeContract(l,d,"withdraw",[e,t])}async consumeFromVault(e,t,n,a=0n,r=0n,s=BigInt(Math.floor(Date.now()/1e3))){return await this.blockchainService.writeContract(l,d,"consume",[e,t,n,a,r,s])}async prepareRelayedConsume(e,t,n,a=0n,r=0n,s=BigInt(Math.floor(Date.now()/1e3)),o=3600){await this.blockchainService.ensureWalletConnected();const c=this.blockchainService.getAccount(),u=this.blockchainService.getChainId();if(!c||void 0===u)throw new Error("钱包未连接或初始化失败");const p=i({abi:d,functionName:"consume",args:[e,t,n,a,r,s]}),y=Math.floor(Date.now()/1e3)+o,m=await this.blockchainService.getNonce(c.address),h={from:c.address,to:l,value:"0",gas:"3000000",nonce:m.toString(),deadline:y.toString(),data:p};try{const e=await this.signingService.signTypedData(h,u,m);return{...h,signature:e}}catch(e){throw console.error("生成签名失败:",e),new Error(`生成签名失败: ${e.message}`)}}async prepareRelayedDeposit(e,t,n=3600){await this.blockchainService.ensureWalletConnected();const a=this.blockchainService.getAccount(),r=this.blockchainService.getChainId();if(!a||void 0===r)throw new Error("钱包未连接或初始化失败");await this.blockchainService.ensureTokenAllowance(e,l,t);const s=i({abi:d,functionName:"deposit",args:[e,t]}),o=Math.floor(Date.now()/1e3)+n,c=await this.blockchainService.getNonce(a.address),u={from:a.address,to:l,value:"0",gas:"3000000",nonce:c.toString(),deadline:o.toString(),data:s};try{const e=await this.signingService.signTypedData(u,r,c);return{...u,signature:e}}catch(e){throw console.error("生成签名失败:",e),new Error(`生成签名失败: ${e.message}`)}}async prepareRelayedWithdraw(e,t,n=3600){await this.blockchainService.ensureWalletConnected();const a=this.blockchainService.getAccount(),r=this.blockchainService.getChainId();if(!a||void 0===r)throw new Error("钱包未连接或初始化失败");const s=i({abi:d,functionName:"withdraw",args:[e,t]}),o=Math.floor(Date.now()/1e3)+n,c=await this.blockchainService.getNonce(a.address),u={from:a.address,to:l,value:"0",gas:"3000000",nonce:c.toString(),deadline:o.toString(),data:s};try{const e=await this.signingService.signTypedData(u,r,c);return{...u,signature:e}}catch(e){throw console.error("生成签名失败:",e),new Error(`生成签名失败: ${e.message}`)}}}export{v as BlockchainService,k as MerchantConfigManager,C as MerchantManager,A as OperationType,M as RelayerService,x as SigningService,I as TransactionService,f as WalletService};
//# sourceMappingURL=index.esm.js.map
